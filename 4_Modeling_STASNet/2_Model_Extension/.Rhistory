source("../Modeling_Results_Different_Thresholds/U_FUNCTIONS/Script_LinkSelection_4_ModelExtension_Pvalue_005.R")
#Modeling_Dir = "/project/ag_schulz/Zeba/MODELING_STASNet/Perc_DelRes_Midpvalue_005_20201029"
Modeling_Dir = "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_WORKFLOW_Oct2020_Model_MPIServer/Perc_DelRes_Midpvalue_005_20201029"
MyHTMLTheme <-  theme_set(theme_light(base_size=15))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
#strip.background = element_rect(fill="grey90", colour="grey90",size=1),
panel.background = element_rect(colour="black",size=1, fill = NA),
# strip.text.x = element_text(color='black',margin = margin(.05, 0, .05, 0, "cm")),
# strip.text.y = element_text(color='black',margin = margin(.05, 0.05, .05, 0.05, "cm")),
#axis.line = element_line(colour = 'black'), # This is used to have only the x and y axes of the plot in black.
legend.text = element_text(size=12, margin = margin(l = 1, unit = "pt")),
legend.title=element_text(size=15),
legend.spacing.y = unit(0.01, 'cm'),
#legend.key.size = unit(0.5, 'cm'),
legend.key.size = unit(0.5, "lines"),    # key size (unit) # This controls the distance between legend icons
legend.key.height = NULL,                # key height (unit)
legend.key.width = NULL,                 # key width (unit)
#legend.position = c(.95, .95),         # to place legend within the plot
# legend.position="bottom",
legend.justification = c("centre", "top"),
legend.box.background = element_rect(fill=NA, colour = NA),
legend.background=element_blank(), ### ADDED to get rid of grey bg in legend key
#legend.box.just = "right",
#legend.margin = margin(6, 6, 6, 6),
axis.text.x = element_text(size=12, face = "bold"),
axis.title.x = element_text(size=12),
axis.text.y = element_text(size=12, face = "bold"),
axis.title.y = element_text(size=12),
axis.ticks = element_line(color='black'),
strip.text.x = element_text(color='black', size=15, face="bold"),#set the size and bold face of panel headings of the facet grid.
strip.text.y = element_text(color='black', size=15, face="bold"),# Not needed, since we dont have a facet grid panel heading on y axis
strip.background = element_rect(colour=NA, fill=NA))
library(tidyverse)
library(plyr)
library(dplyr)
library(STASNet)
library(htmlTable)
source("../Modeling_Results_Different_Thresholds/U_FUNCTIONS/Script_LinkSelection_4_ModelExtension_Pvalue_005.R")
#Modeling_Dir = "/project/ag_schulz/Zeba/MODELING_STASNet/Perc_DelRes_Midpvalue_005_20201029"
Modeling_Dir = "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_WORKFLOW_Oct2020_Model_MPIServer/Perc_DelRes_Midpvalue_005_20201029"
MyHTMLTheme <-  theme_set(theme_light(base_size=15))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
#strip.background = element_rect(fill="grey90", colour="grey90",size=1),
panel.background = element_rect(colour="black",size=1, fill = NA),
# strip.text.x = element_text(color='black',margin = margin(.05, 0, .05, 0, "cm")),
# strip.text.y = element_text(color='black',margin = margin(.05, 0.05, .05, 0.05, "cm")),
#axis.line = element_line(colour = 'black'), # This is used to have only the x and y axes of the plot in black.
legend.text = element_text(size=12, margin = margin(l = 1, unit = "pt")),
legend.title=element_text(size=15),
legend.spacing.y = unit(0.01, 'cm'),
#legend.key.size = unit(0.5, 'cm'),
legend.key.size = unit(0.5, "lines"),    # key size (unit) # This controls the distance between legend icons
legend.key.height = NULL,                # key height (unit)
legend.key.width = NULL,                 # key width (unit)
#legend.position = c(.95, .95),         # to place legend within the plot
# legend.position="bottom",
legend.justification = c("centre", "top"),
legend.box.background = element_rect(fill=NA, colour = NA),
legend.background=element_blank(), ### ADDED to get rid of grey bg in legend key
#legend.box.just = "right",
#legend.margin = margin(6, 6, 6, 6),
axis.text.x = element_text(size=12, face = "bold"),
axis.title.x = element_text(size=12),
axis.text.y = element_text(size=12, face = "bold"),
axis.title.y = element_text(size=12),
axis.ticks = element_line(color='black'),
strip.text.x = element_text(color='black', size=15, face="bold"),#set the size and bold face of panel headings of the facet grid.
strip.text.y = element_text(color='black', size=15, face="bold"),# Not needed, since we dont have a facet grid panel heading on y axis
strip.background = element_rect(colour=NA, fill=NA))
# Functions :
No_rows_display=20
PrintOut_Table <- function(my_ext_list) {
htmlTable(my_ext_list,
align.header = "c",
align = "c",
col.rgroup = c("#F7F7F7","none"), # to get the stripes in alternate rows
css.cell = rbind(rep("font-size: 1em; padding-left: 1.2em; padding-right: 1.2em;", times=ncol(my_ext_list)),
matrix("", ncol=ncol(my_ext_list), nrow=nrow(my_ext_list))))
}
XX_FC_midas <- read.csv(file.path(Modeling_Dir,"XX/XX_R345.csv"))
drop_strange_cols <- c("X","X1")## Removing two strange columns that get added into the MIDAS files when it is saved as csv.
XX_FC_midas <- XX_FC_midas[!colnames(XX_FC_midas) %in% drop_strange_cols]
# My_dir <- "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_PIPIELINE_MPIserver/S4_Merge_BP_WB_FC_Aktvalues"
# XX_FC_R5onlydropped <- read.csv(file.path(My_dir,"R345_XX_BP_WB_Merged_MIDAS_bCateninNO_AktFiltered.csv"))
Init_XX_FC_Model_Folder = "XX/run_XX_R345_Network_100k_2020-10-29" #Current_Model_Folder
Init_XX_FC_Model = "XX_R345_Network_100k.mra"
Init_XX_FC_Ext_File = "extension_XX_R345_Network_100k+red.csv"
Init_XX_FC_model = rebuildModel(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Model), XX_FC_midas)
plotModelGraph(Init_XX_FC_model)
##plotModelParameters(Init_XX_FC_model)
Init_XX_FC_LinkSugg = read.table(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Ext_File), sep = "\t", header = TRUE)
#Init_XX_FC_LinkSugg <- Init_XX_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XX_FC_LinkSugg,n=No_rows_display))
XO_FC_midas <- read.csv(file.path(Modeling_Dir,"XO/XO_R345.csv"))
drop_strange_cols <- c("X","X1")## Removing two strange columns that somehow creep into the MIDAS files when it is saved as csv.
XO_FC_midas <- XO_FC_midas[!colnames(XO_FC_midas) %in% drop_strange_cols]
# My_dir <- "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_PIPIELINE_MPIserver/S4_Merge_BP_WB_FC_Aktvalues"
# XO_FC_R5onlydropped <- read.csv(file.path(My_dir,"R345_XO_BP_WB_Merged_MIDAS_bCateninNO_AktFiltered.csv"))
Init_XO_FC_Model_Folder = "XO/run_XO_R345_Network_100k_2020-10-29" #Current_Model_Folder
Init_XO_FC_Model = "XO_R345_Network_100k.mra"
Init_XO_FC_Ext_File = "extension_XO_R345_Network_100k+red.csv"
Init_XO_FC_model = rebuildModel(file.path(Modeling_Dir,Init_XO_FC_Model_Folder,Init_XO_FC_Model), XO_FC_midas)
plotModelGraph(Init_XO_FC_model)
#plotModelParameters(Init_XO_FC_model)
Init_XO_FC_LinkSugg = read.table(file.path(Modeling_Dir,Init_XO_FC_Model_Folder,Init_XO_FC_Ext_File), sep = "\t", header = TRUE)
#Init_XO_FC_LinkSugg <- Init_XO_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XO_FC_LinkSugg,n=No_rows_display))
View(Init_XX_FC_LinkSugg)
XO_list <- filter_ext_list(Init_XO_FC_LinkSugg)
View(XO_list)
XX_list <- filter_ext_list(Init_XX_FC_LinkSugg)
##########  Unhash to test######
XX_ext <-  XX_list
XO_ext <-  XO_list
Selection_Criterion <- 3
View(XX_list)
XX_ext_common = XX_ext[XX_ext$Link %in% XO_ext$Link,]
XO_ext_common = XO_ext[XO_ext$Link %in% XX_ext$Link,]
XX_order_delRes = order(XX_ext_common$Res_delta, decreasing = TRUE) #in the sorted seq, to which position should the input seqelements be moved to
XX_ext_ordered = XX_ext_common[XX_order_delRes,]# moving the rows to those postions, keeping column seq as is
XX_ext_ordered$Rank = rank(-XX_ext_common$Res_delta,ties.method = "min")# Now creating the Rank column - such that equal values get average rank
View(XX_ext_ordered)
XO_ext_ordered = XO_ext_common[XO_order_delRes,]
XO_ext_ordered$Rank = rank(-XO_ext_common$Res_delta,ties.method = "min")
XO_order_delRes = order(XO_ext_common$Res_delta, decreasing = TRUE)
XO_ext_ordered = XO_ext_common[XO_order_delRes,]
XO_ext_ordered$Rank = rank(-XO_ext_common$Res_delta,ties.method = "min")
XX_CL_Rank = XX_ext_ordered %>%
dplyr::select(Link, Rank, Res_delta, adj_pval,Perc_Res_delta)
View(XX_CL_Rank)
XO_CL_Rank = XO_ext_ordered %>%
dplyr::select(Link, Rank, Res_delta, adj_pval,Perc_Res_delta)
common_links_ranks = dplyr::full_join(XX_CL_Rank,XO_CL_Rank, by="Link",suffix = c("_XX", "_XO") )
common_links_ranks = common_links_ranks %>%
mutate(SumOfRanks = Rank_XX+Rank_XO) %>%
mutate(CommonRank = pmax(Rank_XX,Rank_XO)) %>%  #pmax is for pair-wise max
mutate(Total_DelResidual = Res_delta_XX+Res_delta_XO) %>%
mutate(Tot_Percentage_DelResidual = Perc_Res_delta_XX+Perc_Res_delta_XO)
View(common_links_ranks)
View(common_links_ranks)
View(common_links_ranks)
# To make the tabel simplex to see
common_links_byTot_Percentage_DelResidual_sub <- common_links_byTot_Percentage_DelResidual %>%
select(!grep("Rank", colnames(common_links_byTot_Percentage_DelResidual)))
#LA3_common_links_bySumOfRanks = common_links_ranks[order(common_links_ranks$SumOfRanks),]
common_links_byComRanks = common_links_ranks[order(common_links_ranks$CommonRank),]
common_links_byTotDelResidual = common_links_ranks[order(-common_links_ranks$Total_DelResidual),] # The minus sign is to order in descending
common_links_byTot_Percentage_DelResidual = common_links_ranks[order(-common_links_ranks$Tot_Percentage_DelResidual),] # The minus sign is to order in descending
# To make the tabel simplex to see
common_links_byTot_Percentage_DelResidual_sub <- common_links_byTot_Percentage_DelResidual %>%
select(!grep("Rank", colnames(common_links_byTot_Percentage_DelResidual)))
common_links_byTot_Percentage_DelResidual_sub
colnames(common_links_byTot_Percentage_DelResidual)
colnames(common_links_byTot_Percentage_DelResidual_sub)
# Chunk 1: setup
#caching globally to decrease re-build time
knitr::opts_chunk$set(fig.align='center', cache=T, message=F,echo = FALSE)
# Chunk 2
library(tidyverse)
library(plyr)
library(dplyr)
library(STASNet)
library(htmlTable)
source("../Modeling_Results_Different_Thresholds/U_FUNCTIONS/Script_LinkSelection_4_ModelExtension_Pvalue_005.R")
#Modeling_Dir = "/project/ag_schulz/Zeba/MODELING_STASNet/Perc_DelRes_Midpvalue_005_20201029"
Modeling_Dir = "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_WORKFLOW_Oct2020_Model_MPIServer/Perc_DelRes_Midpvalue_005_20201029"
MyHTMLTheme <-  theme_set(theme_light(base_size=15))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
#strip.background = element_rect(fill="grey90", colour="grey90",size=1),
panel.background = element_rect(colour="black",size=1, fill = NA),
# strip.text.x = element_text(color='black',margin = margin(.05, 0, .05, 0, "cm")),
# strip.text.y = element_text(color='black',margin = margin(.05, 0.05, .05, 0.05, "cm")),
#axis.line = element_line(colour = 'black'), # This is used to have only the x and y axes of the plot in black.
legend.text = element_text(size=12, margin = margin(l = 1, unit = "pt")),
legend.title=element_text(size=15),
legend.spacing.y = unit(0.01, 'cm'),
#legend.key.size = unit(0.5, 'cm'),
legend.key.size = unit(0.5, "lines"),    # key size (unit) # This controls the distance between legend icons
legend.key.height = NULL,                # key height (unit)
legend.key.width = NULL,                 # key width (unit)
#legend.position = c(.95, .95),         # to place legend within the plot
# legend.position="bottom",
legend.justification = c("centre", "top"),
legend.box.background = element_rect(fill=NA, colour = NA),
legend.background=element_blank(), ### ADDED to get rid of grey bg in legend key
#legend.box.just = "right",
#legend.margin = margin(6, 6, 6, 6),
axis.text.x = element_text(size=12, face = "bold"),
axis.title.x = element_text(size=12),
axis.text.y = element_text(size=12, face = "bold"),
axis.title.y = element_text(size=12),
axis.ticks = element_line(color='black'),
strip.text.x = element_text(color='black', size=15, face="bold"),#set the size and bold face of panel headings of the facet grid.
strip.text.y = element_text(color='black', size=15, face="bold"),# Not needed, since we dont have a facet grid panel heading on y axis
strip.background = element_rect(colour=NA, fill=NA))
# Chunk 3
# Functions :
No_rows_display=20
PrintOut_Table <- function(my_ext_list) {
htmlTable(my_ext_list,
align.header = "c",
align = "c",
col.rgroup = c("#F7F7F7","none"), # to get the stripes in alternate rows
css.cell = rbind(rep("font-size: 1em; padding-left: 1.2em; padding-right: 1.2em;", times=ncol(my_ext_list)),
matrix("", ncol=ncol(my_ext_list), nrow=nrow(my_ext_list))))
}
XX_FC_midas <- read.csv(file.path(Modeling_Dir,"XX/XX_R345.csv"))
drop_strange_cols <- c("X","X1")## Removing two strange columns that get added into the MIDAS files when it is saved as csv.
XX_FC_midas <- XX_FC_midas[!colnames(XX_FC_midas) %in% drop_strange_cols]
# My_dir <- "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_PIPIELINE_MPIserver/S4_Merge_BP_WB_FC_Aktvalues"
# XX_FC_R5onlydropped <- read.csv(file.path(My_dir,"R345_XX_BP_WB_Merged_MIDAS_bCateninNO_AktFiltered.csv"))
Init_XX_FC_Model_Folder = "XX/run_XX_R345_Network_100k_2020-10-29" #Current_Model_Folder
Init_XX_FC_Model = "XX_R345_Network_100k.mra"
Init_XX_FC_Ext_File = "extension_XX_R345_Network_100k+red.csv"
Init_XX_FC_model = rebuildModel(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Model), XX_FC_midas)
plotModelGraph(Init_XX_FC_model)
##plotModelParameters(Init_XX_FC_model)
Init_XX_FC_LinkSugg = read.table(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Ext_File), sep = "\t", header = TRUE)
#Init_XX_FC_LinkSugg <- Init_XX_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XX_FC_LinkSugg,n=No_rows_display))
XO_FC_midas <- read.csv(file.path(Modeling_Dir,"XO/XO_R345.csv"))
drop_strange_cols <- c("X","X1")## Removing two strange columns that somehow creep into the MIDAS files when it is saved as csv.
XO_FC_midas <- XO_FC_midas[!colnames(XO_FC_midas) %in% drop_strange_cols]
# My_dir <- "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_PIPIELINE_MPIserver/S4_Merge_BP_WB_FC_Aktvalues"
# XO_FC_R5onlydropped <- read.csv(file.path(My_dir,"R345_XO_BP_WB_Merged_MIDAS_bCateninNO_AktFiltered.csv"))
Init_XO_FC_Model_Folder = "XO/run_XO_R345_Network_100k_2020-10-29" #Current_Model_Folder
Init_XO_FC_Model = "XO_R345_Network_100k.mra"
Init_XO_FC_Ext_File = "extension_XO_R345_Network_100k+red.csv"
Init_XO_FC_model = rebuildModel(file.path(Modeling_Dir,Init_XO_FC_Model_Folder,Init_XO_FC_Model), XO_FC_midas)
plotModelGraph(Init_XO_FC_model)
#plotModelParameters(Init_XO_FC_model)
Init_XO_FC_LinkSugg = read.table(file.path(Modeling_Dir,Init_XO_FC_Model_Folder,Init_XO_FC_Ext_File), sep = "\t", header = TRUE)
#Init_XO_FC_LinkSugg <- Init_XO_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XO_FC_LinkSugg,n=No_rows_display))
INIT_XX_ext <- filter_ext_list(Init_XX_FC_LinkSugg)
View(Init_XX_FC_LinkSugg)
INIT_common_links_byTot_Percentage_DelResidual <- Select_Link(INIT_XX_ext,INIT_XO_ext,3)
INIT_XO_ext <- filter_ext_list(Init_XO_FC_LinkSugg)
PrintOut_Table(head(INIT_XO_ext, n=No_rows_display))
INIT_common_links_byTot_Percentage_DelResidual <- Select_Link(INIT_XX_ext,INIT_XO_ext,3)
library(readxl)
library(tidyverse)
library(htmlTable)
filter_ext_list <- function(input_ext_list) {
###UNHASH to test ####
#input_ext_list <- INIT_XX_ext_InputFile
filt_ext_list <- input_ext_list %>%
filter(!(from %in% c("Stat3", "Smad1", "Smad2", "Bmp4","NoLif", "Fgf4","Activin"))) %>%
filter(adj_pval < 0.005 & value != 0) %>%
mutate(Res_delta = round(Res_delta,3)) %>%
mutate(adj_pval = round(adj_pval,3)) %>%
mutate(Link = paste0(from,"_",to)) %>%
mutate(Base_Res = residual+Res_delta) %>%
mutate(Perc_Res_delta = round((Res_delta/Base_Res)*100,2) )
return(filt_ext_list)
}
# Selection_Criterion = 1 : common_links_byComRanks
# Selection_Criterion = 2 : common_links_byTotDelResidual
# Selection_Criterion = 3 : common_links_byTot_Percentage_DelResidual
Select_Link<- function(XX_ext_list, XO_ext_list, Selection_Criterion ) {
##########  Unhash to test######
# XX_ext <-  INIT_XX_ext
# XO_ext <-  INIT_XO_ext
# Selection_Criterion <- 1
###  Hash for testing. Unhash for real work
XX_ext <-  XX_ext_list
XO_ext <-  XO_ext_list
Selection_Criterion <- Selection_Criterion
XX_ext_common = XX_ext[XX_ext$Link %in% XO_ext$Link,]
XO_ext_common = XO_ext[XO_ext$Link %in% XX_ext$Link,]
XX_order_delRes = order(XX_ext_common$Res_delta, decreasing = TRUE) #in the sorted seq, to which position should the input seqelements be moved to
XX_ext_ordered = XX_ext_common[XX_order_delRes,]# moving the rows to those postions, keeping column seq as is
XX_ext_ordered$Rank = rank(-XX_ext_common$Res_delta,ties.method = "min")# Now creating the Rank column - such that equal values get average rank
XO_order_delRes = order(XO_ext_common$Res_delta, decreasing = TRUE)
XO_ext_ordered = XO_ext_common[XO_order_delRes,]
XO_ext_ordered$Rank = rank(-XO_ext_common$Res_delta,ties.method = "min")
# XX_CL_Rank = dplyr::select(XX_ext_ordered, c(Link, Rank, Res_delta, adj_pval,Perc_Res_delta))
# XO_CL_Rank = dplyr::select(XO_ext_ordered, c(Link, Rank, Res_delta, adj_pval,Perc_Res_delta))
XX_CL_Rank = XX_ext_ordered %>%
dplyr::select(Link, Rank, Res_delta, adj_pval,Perc_Res_delta)
XO_CL_Rank = XO_ext_ordered %>%
dplyr::select(Link, Rank, Res_delta, adj_pval,Perc_Res_delta)
common_links_ranks = dplyr::full_join(XX_CL_Rank,XO_CL_Rank, by="Link",suffix = c("_XX", "_XO") )
common_links_ranks = common_links_ranks %>%
mutate(SumOfRanks = Rank_XX+Rank_XO) %>%
mutate(CommonRank = pmax(Rank_XX,Rank_XO)) %>%  #pmax is for pair-wise max
mutate(Total_DelResidual = Res_delta_XX+Res_delta_XO) %>%
mutate(Tot_Percentage_DelResidual = Perc_Res_delta_XX+Perc_Res_delta_XO)
#LA3_common_links_bySumOfRanks = common_links_ranks[order(common_links_ranks$SumOfRanks),]
common_links_byComRanks = common_links_ranks[order(common_links_ranks$CommonRank),]
common_links_byTotDelResidual = common_links_ranks[order(-common_links_ranks$Total_DelResidual),] # The minus sign is to order in descending
common_links_byTot_Percentage_DelResidual = common_links_ranks[order(-common_links_ranks$Tot_Percentage_DelResidual),] # The minus sign is to order in descending
# To make the table simpler to see removing rank based columns because they were not used
common_links_byTot_Percentage_DelResidual <- common_links_byTot_Percentage_DelResidual %>%
select(!grep("Rank", colnames(common_links_byTot_Percentage_DelResidual)))
if(Selection_Criterion == 1){
return(common_links_byComRanks)
}else{
if(Selection_Criterion == 2){
return(common_links_byTotDelResidual)
}else{
if(Selection_Criterion == 3){
return(common_links_byTot_Percentage_DelResidual)
}
}
}
}
PrintOut_Table <- function(my_ext_list) {
htmlTable(my_ext_list,
align.header = "c",
align = "c",
col.rgroup = c("#F7F7F7","none"), # to get the stripes in alternate rows
css.cell = rbind(rep("font-size: 1em; padding-left: 1.2em; padding-right: 1.2em;", times=ncol(my_ext_list)),
matrix("", ncol=ncol(my_ext_list), nrow=nrow(my_ext_list))))
}
INIT_common_links_byTot_Percentage_DelResidual <- Select_Link(INIT_XX_ext,INIT_XO_ext,3)
PrintOut_Table(head(INIT_common_links_byTot_Percentage_DelResidual, n=No_rows_display))
library(tidyverse)
library(plyr)
library(dplyr)
library(STASNet)
library(htmlTable)
source("../Modeling_Results_Different_Thresholds/U_FUNCTIONS/Script_LinkSelection_4_ModelExtension_Pvalue_005.R")
#Modeling_Dir = "/project/ag_schulz/Zeba/MODELING_STASNet/Perc_DelRes_Midpvalue_005_20201029"
Modeling_Dir = "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_WORKFLOW_Oct2020_Model_MPIServer/Perc_DelRes_Midpvalue_005_20201029"
MyHTMLTheme <-  theme_set(theme_light(base_size=15))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
#strip.background = element_rect(fill="grey90", colour="grey90",size=1),
panel.background = element_rect(colour="black",size=1, fill = NA),
# strip.text.x = element_text(color='black',margin = margin(.05, 0, .05, 0, "cm")),
# strip.text.y = element_text(color='black',margin = margin(.05, 0.05, .05, 0.05, "cm")),
#axis.line = element_line(colour = 'black'), # This is used to have only the x and y axes of the plot in black.
legend.text = element_text(size=12, margin = margin(l = 1, unit = "pt")),
legend.title=element_text(size=15),
legend.spacing.y = unit(0.01, 'cm'),
#legend.key.size = unit(0.5, 'cm'),
legend.key.size = unit(0.5, "lines"),    # key size (unit) # This controls the distance between legend icons
legend.key.height = NULL,                # key height (unit)
legend.key.width = NULL,                 # key width (unit)
#legend.position = c(.95, .95),         # to place legend within the plot
# legend.position="bottom",
legend.justification = c("centre", "top"),
legend.box.background = element_rect(fill=NA, colour = NA),
legend.background=element_blank(), ### ADDED to get rid of grey bg in legend key
#legend.box.just = "right",
#legend.margin = margin(6, 6, 6, 6),
axis.text.x = element_text(size=12, face = "bold"),
axis.title.x = element_text(size=12),
axis.text.y = element_text(size=12, face = "bold"),
axis.title.y = element_text(size=12),
axis.ticks = element_line(color='black'),
strip.text.x = element_text(color='black', size=15, face="bold"),#set the size and bold face of panel headings of the facet grid.
strip.text.y = element_text(color='black', size=15, face="bold"),# Not needed, since we dont have a facet grid panel heading on y axis
strip.background = element_rect(colour=NA, fill=NA))
# Functions :
No_rows_display=20
PrintOut_Table <- function(my_ext_list) {
htmlTable(my_ext_list,
align.header = "c",
align = "c",
col.rgroup = c("#F7F7F7","none"), # to get the stripes in alternate rows
css.cell = rbind(rep("font-size: 1em; padding-left: 1.2em; padding-right: 1.2em;", times=ncol(my_ext_list)),
matrix("", ncol=ncol(my_ext_list), nrow=nrow(my_ext_list))))
}
XX_FC_midas <- read.csv(file.path(Modeling_Dir,"XX/XX_R345.csv"))
drop_strange_cols <- c("X","X1")## Removing two strange columns that get added into the MIDAS files when it is saved as csv.
XX_FC_midas <- XX_FC_midas[!colnames(XX_FC_midas) %in% drop_strange_cols]
# My_dir <- "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_PIPIELINE_MPIserver/S4_Merge_BP_WB_FC_Aktvalues"
# XX_FC_R5onlydropped <- read.csv(file.path(My_dir,"R345_XX_BP_WB_Merged_MIDAS_bCateninNO_AktFiltered.csv"))
Init_XX_FC_Model_Folder = "XX/run_XX_R345_Network_100k_2020-10-29" #Current_Model_Folder
Init_XX_FC_Model = "XX_R345_Network_100k.mra"
Init_XX_FC_Ext_File = "extension_XX_R345_Network_100k+red.csv"
Init_XX_FC_model = rebuildModel(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Model), XX_FC_midas)
plotModelGraph(Init_XX_FC_model)
##plotModelParameters(Init_XX_FC_model)
Init_XX_FC_LinkSugg = read.table(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Ext_File), sep = "\t", header = TRUE)
#Init_XX_FC_LinkSugg <- Init_XX_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XX_FC_LinkSugg,n=No_rows_display))
library(tidyverse)
library(plyr)
library(dplyr)
library(STASNet)
library(htmlTable)
source("../Modeling_Results_Different_Thresholds/U_FUNCTIONS/Script_LinkSelection_4_ModelExtension_Pvalue_005.R")
#Modeling_Dir = "/project/ag_schulz/Zeba/MODELING_STASNet/Perc_DelRes_Midpvalue_005_20201029"
Modeling_Dir = "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_WORKFLOW_Oct2020_Model_MPIServer/Perc_DelRes_Midpvalue_005_20201029"
Init_XX_FC_LinkSugg = read.table(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Ext_File), sep = "\t", header = TRUE)
library(tidyverse)
library(plyr)
library(dplyr)
library(STASNet)
library(htmlTable)
source("../Modeling_Results_Different_Thresholds/U_FUNCTIONS/Script_LinkSelection_4_ModelExtension_Pvalue_005.R")
#Modeling_Dir = "/project/ag_schulz/Zeba/MODELING_STASNet/Perc_DelRes_Midpvalue_005_20201029"
Modeling_Dir = "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_WORKFLOW_Oct2020_Model_MPIServer/Perc_DelRes_Midpvalue_005_20201029"
Init_XX_FC_Model_Folder = "XX/run_XX_R345_Network_100k_2020-10-29" #Current_Model_Folder
Init_XX_FC_Model = "XX_R345_Network_100k.mra"
Init_XX_FC_Ext_File = "extension_XX_R345_Network_100k+red.csv"
Init_XX_FC_LinkSugg = read.table(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Ext_File), sep = "\t", header = TRUE)
#Init_XX_FC_LinkSugg <- Init_XX_FC_LinkSugg[c(1:20),-1]
View(Init_XX_FC_LinkSugg)
#Init_XX_FC_LinkSugg <- Init_XX_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XX_FC_LinkSugg,n=No_rows_display))
#Init_XX_FC_LinkSugg <- Init_XX_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XX_FC_LinkSugg,n=No_rows_display))
No_rows_display = 10
#Init_XX_FC_LinkSugg <- Init_XX_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XX_FC_LinkSugg,n=No_rows_display))
Init_XO_FC_Model_Folder = "XO/run_XO_R345_Network_100k_2020-10-29" #Current_Model_Folder
Init_XO_FC_Model = "XO_R345_Network_100k.mra"
Init_XO_FC_Ext_File = "extension_XO_R345_Network_100k+red.csv"
Init_XO_FC_LinkSugg = read.table(file.path(Modeling_Dir,Init_XO_FC_Model_Folder,Init_XO_FC_Ext_File), sep = "\t", header = TRUE)
#Init_XO_FC_LinkSugg <- Init_XO_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XO_FC_LinkSugg,n=No_rows_display))
INIT_XX_ext <- filter_ext_list(Init_XX_FC_LinkSugg)
PrintOut_Table(head(INIT_XX_ext, n=No_rows_display))
INIT_XO_ext <- filter_ext_list(Init_XO_FC_LinkSugg)
PrintOut_Table(head(INIT_XO_ext, n=No_rows_display))
INIT_common_links_byTot_Percentage_DelResidual <- Select_Link(INIT_XX_ext,INIT_XO_ext,3)
INIT_common_links_byTot_Percentage_DelResidual
# Chunk 1: setup
#caching globally to decrease re-build time
knitr::opts_chunk$set(fig.align='center', cache=T, message=F,echo = FALSE)
# Chunk 2
library(tidyverse)
library(plyr)
library(dplyr)
library(STASNet)
library(htmlTable)
source("../Modeling_Results_Different_Thresholds/U_FUNCTIONS/Script_LinkSelection_4_ModelExtension_Pvalue_005.R")
#Modeling_Dir = "/project/ag_schulz/Zeba/MODELING_STASNet/Perc_DelRes_Midpvalue_005_20201029"
Modeling_Dir = "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_WORKFLOW_Oct2020_Model_MPIServer/Perc_DelRes_Midpvalue_005_20201029"
MyHTMLTheme <-  theme_set(theme_light(base_size=15))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5),
#strip.background = element_rect(fill="grey90", colour="grey90",size=1),
panel.background = element_rect(colour="black",size=1, fill = NA),
# strip.text.x = element_text(color='black',margin = margin(.05, 0, .05, 0, "cm")),
# strip.text.y = element_text(color='black',margin = margin(.05, 0.05, .05, 0.05, "cm")),
#axis.line = element_line(colour = 'black'), # This is used to have only the x and y axes of the plot in black.
legend.text = element_text(size=12, margin = margin(l = 1, unit = "pt")),
legend.title=element_text(size=15),
legend.spacing.y = unit(0.01, 'cm'),
#legend.key.size = unit(0.5, 'cm'),
legend.key.size = unit(0.5, "lines"),    # key size (unit) # This controls the distance between legend icons
legend.key.height = NULL,                # key height (unit)
legend.key.width = NULL,                 # key width (unit)
#legend.position = c(.95, .95),         # to place legend within the plot
# legend.position="bottom",
legend.justification = c("centre", "top"),
legend.box.background = element_rect(fill=NA, colour = NA),
legend.background=element_blank(), ### ADDED to get rid of grey bg in legend key
#legend.box.just = "right",
#legend.margin = margin(6, 6, 6, 6),
axis.text.x = element_text(size=12, face = "bold"),
axis.title.x = element_text(size=12),
axis.text.y = element_text(size=12, face = "bold"),
axis.title.y = element_text(size=12),
axis.ticks = element_line(color='black'),
strip.text.x = element_text(color='black', size=15, face="bold"),#set the size and bold face of panel headings of the facet grid.
strip.text.y = element_text(color='black', size=15, face="bold"),# Not needed, since we dont have a facet grid panel heading on y axis
strip.background = element_rect(colour=NA, fill=NA))
# Chunk 3
# Functions :
No_rows_display=20
PrintOut_Table <- function(my_ext_list) {
htmlTable(my_ext_list,
align.header = "c",
align = "c",
col.rgroup = c("#F7F7F7","none"), # to get the stripes in alternate rows
css.cell = rbind(rep("font-size: 1em; padding-left: 1.2em; padding-right: 1.2em;", times=ncol(my_ext_list)),
matrix("", ncol=ncol(my_ext_list), nrow=nrow(my_ext_list))))
}
# Chunk 4
XX_FC_midas <- read.csv(file.path(Modeling_Dir,"XX/XX_R345.csv"))
drop_strange_cols <- c("X","X1")## Removing two strange columns that get added into the MIDAS files when it is saved as csv.
XX_FC_midas <- XX_FC_midas[!colnames(XX_FC_midas) %in% drop_strange_cols]
# My_dir <- "/Users/sultana/PHD_PROJECT_Zeba/ANALYSIS_PIPIELINE_MPIserver/S4_Merge_BP_WB_FC_Aktvalues"
# XX_FC_R5onlydropped <- read.csv(file.path(My_dir,"R345_XX_BP_WB_Merged_MIDAS_bCateninNO_AktFiltered.csv"))
# Chunk 5
Init_XX_FC_Model_Folder = "XX/run_XX_R345_Network_100k_2020-10-29" #Current_Model_Folder
Init_XX_FC_Model = "XX_R345_Network_100k.mra"
Init_XX_FC_Ext_File = "extension_XX_R345_Network_100k+red.csv"
Init_XX_FC_model = rebuildModel(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Model), XX_FC_midas)
plotModelGraph(Init_XX_FC_model)
##plotModelParameters(Init_XX_FC_model)
# Chunk 6
plotModelAccuracy(Init_XX_FC_model)
plotModelScores(Init_XX_FC_model)
# Chunk 7
Init_XX_FC_LinkSugg = read.table(file.path(Modeling_Dir,Init_XX_FC_Model_Folder,Init_XX_FC_Ext_File), sep = "\t", header = TRUE)
#Init_XX_FC_LinkSugg <- Init_XX_FC_LinkSugg[c(1:20),-1]
PrintOut_Table(head(Init_XX_FC_LinkSugg,n=No_rows_display))
# Chunk 8
LA1_XX_FC_Model_Folder = "XX/run_XX_R345_Network_LA1_100k_2020-10-29" #Current_Model_Folder
LA1_XX_FC_Model = "XX_R345_Network_LA1_100k.mra"
LA1_XX_FC_Ext_File = "extension_XX_R345_Network_LA1_100k+red.csv"
LA1_XX_FC_model = rebuildModel(file.path(Modeling_Dir,LA1_XX_FC_Model_Folder,LA1_XX_FC_Model), XX_FC_midas)
plotModelGraph(LA1_XX_FC_model)
#plotModelParameters(LA1_XX_FC_model)
# Chunk 9
plotModelAccuracy(LA1_XX_FC_model)
plotModelScores(LA1_XX_FC_model)

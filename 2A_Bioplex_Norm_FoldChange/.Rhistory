setwd("~/PHD_PROJECT_Zeba/Zeba_PhD_PAPER/SCRIPTS_Sultana_etal_2021_GitHubPrep_PREP_V2/2A_Bioplex_Norm_FoldChange")
#!/usr/bin/env Rscript
library(dplyr)
library(tidyr)
library(stringr)
library(openxlsx)
library(gdata) #read.xls
library(readxl) #for read_excel
library(reshape2) # for melt
library(ggplot2)
library(tidyverse)
library(corrplot) #for plotting correlation matrix
library(gridExtra)
library(RColorBrewer)
library(egg)
####### FUNCTIONS ##########
Fetch_Bioplex_Data <- function(datas,control){
datas <- datas
control <- control
colnames(control) <- colnames(datas)
#rownames(control) <- rownames(datas) # There is no need to do this. Moreover it would be technically wrong to have rownames in this matrix, because these are mean values repeated in a number of rows for ease of division to get FC over untreated control.
#Stat3 measurement from Millipore is being dropped, because WB data looks better.
#Therefore only Biorad assay data alone is being used.
#analytes_inlcuded <- c("Gsk3","Mek","mTor","Akt")
analytes_inlcuded <- c("Gsk3","Mek","mTor","Akt")
datas <- datas[,colnames(datas) %in% analytes_inlcuded]
control <- control[,colnames(control) %in% analytes_inlcuded]
full_datas <- full_datas[,colnames(full_datas) %in% analytes_inlcuded]
Treatmentnames <- row.names(full_datas)
#CAUTION : MFI values printed by Maturin's script are in their log2. However, the MFI values that I am using here for LOG2FC calculation are the raw values. Hence division is fine.
logFC <- data.frame(log2(datas/control))
FC <- data.frame(datas/control)
rawMFI <- data.frame(full_datas)
rownames(rawMFI) <- make.names(Treatmentnames, unique = TRUE)
all_bioplex_data <- list("logFC"=logFC, "rawMFI" = rawMFI, "FC" = FC)
return(all_bioplex_data)
}
Bioplex_Annotation <- function(bioplex_data){
# #To Check the function unhash these 2 lines
# bioplex_data <- Bioplex_Log2FC_XO3
# my_file_name <- as.character(substitute(Bioplex_Log2FC_XO3))
my_file_name <- as.character(substitute(bioplex_data))
bioplex_data$Treatment <- row.names(bioplex_data)
Cell_type <-ifelse(grepl("XX",my_file_name),paste0("XX"),paste0("XO"))
bioplex_data$x_status <- rep(Cell_type,nrow(bioplex_data))
replicate_number <- strsplit(my_file_name,"_")[[1]][3]
bioplex_data$Replicate <- rep(replicate_number,nrow(bioplex_data))
return(bioplex_data)
}
Normalize_Bioplex_allMean <- function(data_df, ReplicateNum, X_Status) {
# data_df <- Bioplex_rawMFI #TO_DEBUG
# ReplicateNum <- "R3" #TO_DEBUG
# X_Status <- "XO" #TO_DEBUG
sub_data <-
data_df %>%
filter(!grepl("blank",Treatment)) %>%
filter(x_status == X_Status) %>%
filter(Replicate == ReplicateNum)
mean_rows <-
sub_data %>%
filter(grepl("^c[d]*",Treatment))
sub_data_cmeans <-
sub_data %>%
filter(grepl("^c[d]*",Treatment)) %>% #match beginning of string c, followed by a digit .. the digit may be present 0 times also.
summarise_at(.vars = vars(Gsk3:Akt),
.funs = funs(mean(.,na.rm=TRUE)))
sub_data_cmeans$Treatment <-  "c"
sub_data_cmeans$x_status <- X_Status
sub_data_cmeans$Replicate <- ReplicateNum
sub_data_t <-   sub_data %>%
filter(!grepl("^c[d]*",Treatment))
#filter(Treatment !="c") #Was beign used earlier to find control rows
sub_data_t_cmean <- dplyr::bind_rows(sub_data_t,sub_data_cmeans) #Improve this - rbind does not take into account the names of columns so a mistake can creep in #TO_IMPROVE
#rbind.fill is to make sure that columns are correctly matched before rowbinding. But I think rbind aslo is doing column matching now.
#Another advantage is that rbind.fill is faster and also if columns are missing in dfs being rbinded, it adds them filled with NAs
sub_data_overall_mean <- sub_data_t_cmean %>%
summarize_at(.vars = vars(Gsk3:Akt),
.funs = funs(mean(.,na.rm=TRUE))) %>%
rename_at(.vars = vars(Gsk3:Akt),
.funs = funs(paste0(.,"_mean")))
sub_data_overall_mean$Replicate <- ReplicateNum
sub_data_mean_Norm_calc <- left_join(sub_data,sub_data_overall_mean,by= "Replicate")
sub_data_mean_Norm <- sub_data_mean_Norm_calc %>%
transmute(Replicate, # Transmute retains all the columns that are passed to it.
Treatment, #So u can list the columns that u want retained even when u dont use them to calculate new columns.
x_status,
Gsk3_Norm = Gsk3/Gsk3_mean,
Mek_Norm = Mek/Mek_mean,
mTor_Norm = mTor/mTor_mean,
Akt_Norm = Akt/Akt_mean)
return(sub_data_mean_Norm)
}
Bioplex_FC_controlMean <- function(data_df, ReplicateNum, X_Status) {
# data_df <- Bioplex_MFI_MeanNormalized #TO_DEBUG
# ReplicateNum <- "R3" #TO_DEBUG
# X_Status <- "XX" #TO_DEBUG
sub_data <- data_df %>%
filter(x_status == X_Status) %>%
filter(Replicate == ReplicateNum)
sub_data_cmeans <-
sub_data %>%
filter(Treatment =="c") %>%
summarise_at(.vars = vars(Gsk3:Akt),
.funs = funs(mean(.,na.rm=TRUE)),.keep_all = TRUE) %>%
rename_at(.vars = vars(Gsk3:Akt),
.funs = funs(paste0(.,"_mean")))
# sub_data_cmeans$Treatment <-  "c"
# sub_data_cmeans$x_status <- X_Status
sub_data_cmeans$Replicate <- ReplicateNum
# sub_data_t <-   sub_data %>%
#   filter(Treatment !="c")
#
# sub_data_t_cmean <- rbind(sub_data_t,sub_data_cmeans) #Improve this - rbind does not take into account the names of columns so a mistake can creep in #TO_IMPROVE
#
# sub_data_overall_mean <- sub_data_t_cmean %>%
#   summarize_at(.vars = vars(Gsk3:Akt),
#             .funs = funs(mean(.,na.rm=TRUE)),.keep_all = TRUE) %>%
#   rename_at(.vars = vars(Gsk3:Akt),
#             .funs = funs(paste0(.,"_mean")))
# sub_data_overall_mean$replicate <- ReplicateNum
sub_data_mean_Norm_calc <- left_join(sub_data,sub_data_cmeans,by= "Replicate")
sub_data_mean_Norm <- sub_data_mean_Norm_calc %>%
transmute(Replicate, # Transmute retains all the columns that are passed to it.
Treatment, #So u can list the columns that u want retained even when u dont use them to calculate new columns.
x_status,
Gsk3_Norm = Gsk3/Gsk3_mean,
Mek_Norm = Mek/Mek_mean,
mTor_Norm = mTor/mTor_mean,
Akt_Norm = Akt/Akt_mean)
return(sub_data_mean_Norm)
}
######### Creating Output dirs ####
dir.create("OUTPUT")
dir.create("OUTPUT_PAPER")
####FETCHING BIOPLEX DATA #####
lxb_analysis_folder <- "../1A_Bioplex_Lxb2MIDAS/INPUTfiles_BioplexR3_R4"
Bioplex_folder <-      "../1A_Bioplex_Lxb2MIDAS/OUTPUT_MIDASfiles"
Replicate_files <- c("XX3_MIDAS.csv","XX4_MIDAS.csv","XX5_MIDAS.csv","XO3_MIDAS.csv","XO4_MIDAS.csv","XO5_MIDAS.csv")
Bioplex_all_data_list = list()
Bioplex_Log2FC_list = list()
Bioplex_FC_list = list()
for(i in 1:length(Replicate_files)) {
my_file_name <- strsplit(Replicate_files[i],"\\.")[[1]][1] # To remove the .csv. Not an essential step i think.
my_file_name <- strsplit(my_file_name,"_")[[1]][1]
cargs <- file.path(Bioplex_folder,Replicate_files[i])
#source(file.path(Bioplex_folder,"plotMIDAS.R"))
source(file.path(lxb_analysis_folder,"plotMIDAS.R"))
Bioplex_all_data_list[[as.character(parse(text = my_file_name))]]<-   as.data.frame(Fetch_Bioplex_Data(datas,control)$rawMFI)
Bioplex_FC_list[[as.character(parse(text = my_file_name))]] <- as.data.frame(Fetch_Bioplex_Data(datas,control)$FC)
Bioplex_Log2FC_list[[as.character(parse(text = my_file_name))]] <- as.data.frame(Fetch_Bioplex_Data(datas,control)$logFC)
}
Bioplex_rawMFI_XX3 <- as.data.frame(Bioplex_all_data_list$XX3)
Bioplex_rawMFI_XX4 <- as.data.frame(Bioplex_all_data_list$XX4)
Bioplex_rawMFI_XX5 <- as.data.frame(Bioplex_all_data_list$XX5)
Bioplex_rawMFI_XO3 <- as.data.frame(Bioplex_all_data_list$XO3)
Bioplex_rawMFI_XO4 <- as.data.frame(Bioplex_all_data_list$XO4)
Bioplex_rawMFI_XO5 <- as.data.frame(Bioplex_all_data_list$XO5)
Bioplex_rawMFI_XX3 <- Bioplex_Annotation(Bioplex_rawMFI_XX3)
Bioplex_rawMFI_XX4 <- Bioplex_Annotation(Bioplex_rawMFI_XX4)
Bioplex_rawMFI_XX5 <- Bioplex_Annotation(Bioplex_rawMFI_XX5)
Bioplex_rawMFI_XO3 <- Bioplex_Annotation(Bioplex_rawMFI_XO3)
Bioplex_rawMFI_XO4 <- Bioplex_Annotation(Bioplex_rawMFI_XO4)
Bioplex_rawMFI_XO5 <- Bioplex_Annotation(Bioplex_rawMFI_XO5)
#The following treatments had very high values of MFI for Akt which looked like a technical error, hence they were replaced with NA
#If data was normalized by mean of the replicate(with these values included) they made the mean too high and as a result the mean normalized values for Akt in all other treatments became too small
Bioplex_rawMFI_XO4$Akt[(Bioplex_rawMFI_XO4$Treatment=="Fgf4.Meki")] <- NA
Bioplex_rawMFI_XO4$Akt[(Bioplex_rawMFI_XO4$Treatment=="Bmp4ri.Gsk3i")] <- NA
Bioplex_rawMFI <- dplyr::bind_rows(Bioplex_rawMFI_XX3,
Bioplex_rawMFI_XX4,
Bioplex_rawMFI_XX5,
Bioplex_rawMFI_XO3,
Bioplex_rawMFI_XO4,
Bioplex_rawMFI_XO5)
#for bind_row (replacement for rbind - faster and matches column names)
Bioplex_rawMFI$Replicate <- str_replace(Bioplex_rawMFI$Replicate, "XO3|XX3", "R3") #str_replace is a function from package "stringr"
Bioplex_rawMFI$Replicate <- str_replace(Bioplex_rawMFI$Replicate, "XO4|XX4", "R4")
Bioplex_rawMFI$Replicate <- str_replace(Bioplex_rawMFI$Replicate, "XO5|XX5", "R5")
#WriteXLS::WriteXLS(Bioplex_rawMFI, "./OUTPUT/Bioplex_rawMFI.xls")
openxlsx::write.xlsx(Bioplex_rawMFI, "./OUTPUT/Bioplex_rawMFI.xlsx")
########## OUTPUT for PAPER #########
Bioplex_rawMFI_PAPER <- Bioplex_rawMFI
Bioplex_rawMFI_PAPER$Treatment <- gsub("\\.","+",Bioplex_rawMFI_PAPER$Treatment)
Bioplex_rawMFI_PAPER$Treatment <- gsub(" ","",Bioplex_rawMFI_PAPER$Treatment)
Bioplex_rawMFI_PAPER$Treatment <- gsub("c.\\d+","c",Bioplex_rawMFI_PAPER$Treatment) # To remove the .numbers[1:8] that had been addeded to rownames in case of "control" rows using make.names(unique=TRUE) because rownames could not be duplicated.
Bioplex_rawMFI_PAPER$Treatment <- gsub("^c$","DMSO",Bioplex_rawMFI_PAPER$Treatment)
Bioplex_rawMFI_PAPER$Replicate <- gsub("R3","Rep1",Bioplex_rawMFI_PAPER$Replicate)
Bioplex_rawMFI_PAPER$Replicate <- gsub("R4","Rep2",Bioplex_rawMFI_PAPER$Replicate)
Bioplex_rawMFI_PAPER$Replicate <- gsub("R5","Rep3",Bioplex_rawMFI_PAPER$Replicate)
Bioplex_rawMFI_PAPER$Akt[Bioplex_rawMFI_PAPER$x_status == "XX" & Bioplex_rawMFI_PAPER$Replicate == "Rep3"] <- NA
Bioplex_rawMFI_PAPER$Akt[Bioplex_rawMFI_PAPER$x_status == "XO" & Bioplex_rawMFI_PAPER$Replicate == "Rep2"] <- NA
Bioplex_rawMFI_PAPER <- Bioplex_rawMFI_PAPER %>%
filter(!grepl("blank",Bioplex_rawMFI_PAPER$Treatment)) %>%
select(x_status,Replicate, Treatment, Gsk3, Mek, mTor, Akt)
#WriteXLS::WriteXLS(Bioplex_rawMFI_PAPER, "./OUTPUT_PAPER/Bioplex_rawMFI_PAPER.xls")
openxlsx::write.xlsx(Bioplex_rawMFI_PAPER, "./OUTPUT_PAPER/Suppl_Table_S2_1_Bioplex_rawMFI.xlsx")
###################################################################################
######## Normalization of Bioplex data over mean signal of replicate ########
###################################################################################
R3_XX_BP_MFI_norm <- Normalize_Bioplex_allMean(Bioplex_rawMFI,"R3","XX")
R4_XX_BP_MFI_norm <- Normalize_Bioplex_allMean(Bioplex_rawMFI,"R4","XX")
R5_XX_BP_MFI_norm <- Normalize_Bioplex_allMean(Bioplex_rawMFI,"R5","XX")
R3_XO_BP_MFI_norm <- Normalize_Bioplex_allMean(Bioplex_rawMFI,"R3","XO")
R4_XO_BP_MFI_norm <- Normalize_Bioplex_allMean(Bioplex_rawMFI,"R4","XO")
R5_XO_BP_MFI_norm <- Normalize_Bioplex_allMean(Bioplex_rawMFI,"R5","XO")
Bioplex_MFI_MeanNormalized <- dplyr::bind_rows(R3_XX_BP_MFI_norm,
R4_XX_BP_MFI_norm,
R5_XX_BP_MFI_norm,
R3_XO_BP_MFI_norm,
R4_XO_BP_MFI_norm,
R5_XO_BP_MFI_norm)
#colnames(Bioplex_MFI_MeanNormalized) <- gsub("replicate","Replicate",colnames(Bioplex_MFI_MeanNormalized))
colnames(Bioplex_MFI_MeanNormalized) <- gsub("_Norm","",colnames(Bioplex_MFI_MeanNormalized))
Bioplex_MFI_MeanNormalized$Treatment <- gsub("\\.","+",Bioplex_MFI_MeanNormalized$Treatment)
Bioplex_MFI_MEAN_Normalized <- Bioplex_MFI_MeanNormalized
#WriteXLS::WriteXLS(Bioplex_MFI_MEAN_Normalized, "./OUTPUT/Bioplex_MFI_MEAN_Normalized.xls")
openxlsx::write.xlsx(Bioplex_MFI_MEAN_Normalized, "./OUTPUT/Bioplex_MFI_MEAN_Normalized.xlsx")
########## OUTPUT for PAPER #########
Bioplex_MFI_MEAN_Normalized_PAPER <- Bioplex_MFI_MEAN_Normalized
Bioplex_MFI_MEAN_Normalized_PAPER$Treatment <- gsub("\\.","+",Bioplex_MFI_MEAN_Normalized_PAPER$Treatment)
Bioplex_MFI_MEAN_Normalized_PAPER$Treatment <- gsub(" ","",Bioplex_MFI_MEAN_Normalized_PAPER$Treatment)
Bioplex_MFI_MEAN_Normalized_PAPER$Treatment <- gsub("c.\\d+","c",Bioplex_MFI_MEAN_Normalized_PAPER$Treatment) # To remove the .numbers[1:8] that had been addeded to rownames in case of "control" rows using make.names(unique=TRUE) because rownames could not be duplicated.
Bioplex_MFI_MEAN_Normalized_PAPER$Treatment <- gsub("^c$","DMSO",Bioplex_MFI_MEAN_Normalized_PAPER$Treatment)
Bioplex_MFI_MEAN_Normalized_PAPER$Replicate <- gsub("R3","Rep1",Bioplex_MFI_MEAN_Normalized_PAPER$Replicate)
Bioplex_MFI_MEAN_Normalized_PAPER$Replicate <- gsub("R4","Rep2",Bioplex_MFI_MEAN_Normalized_PAPER$Replicate)
Bioplex_MFI_MEAN_Normalized_PAPER$Replicate <- gsub("R5","Rep3",Bioplex_MFI_MEAN_Normalized_PAPER$Replicate)
Bioplex_MFI_MEAN_Normalized_PAPER$Akt[Bioplex_MFI_MEAN_Normalized_PAPER$x_status == "XX" & Bioplex_MFI_MEAN_Normalized_PAPER$Replicate == "Rep3"] <- NA
Bioplex_MFI_MEAN_Normalized_PAPER$Akt[Bioplex_MFI_MEAN_Normalized_PAPER$x_status == "XO" & Bioplex_MFI_MEAN_Normalized_PAPER$Replicate == "Rep2"] <- NA
Bioplex_MFI_MEAN_Normalized_PAPER <- Bioplex_MFI_MEAN_Normalized_PAPER %>%
select(x_status,Replicate, Treatment, Gsk3, Mek, mTor, Akt)
#WriteXLS::WriteXLS(Bioplex_MFI_MEAN_Normalized_PAPER, "./OUTPUT_PAPER/Bioplex_MFI_MEAN_Normalized_PAPER.xls")
openxlsx::write.xlsx(Bioplex_MFI_MEAN_Normalized_PAPER, "./OUTPUT_PAPER/Suppl_Table_S2_2_Bioplex_MFI_MEAN_Normalized.xlsx")
###############################################################
######## Calculation : Fold change over control ########
###############################################################
Bioplex_MFI_MeanNormalized$Treatment <- gsub(" ","",Bioplex_MFI_MeanNormalized$Treatment)
Bioplex_MFI_MeanNormalized$Treatment <- gsub("c.\\d+","c",Bioplex_MFI_MeanNormalized$Treatment) # To remove the .numbers[1:8] that had been addeded to rownames in case of "control" rows using make.names(unique=TRUE) because rownames could not be duplicated.
R3_XX_BP_FC <- Bioplex_FC_controlMean(Bioplex_MFI_MeanNormalized,"R3","XX")
R4_XX_BP_FC <- Bioplex_FC_controlMean(Bioplex_MFI_MeanNormalized,"R4","XX")
R5_XX_BP_FC <- Bioplex_FC_controlMean(Bioplex_MFI_MeanNormalized,"R5","XX")
R3_XO_BP_FC <- Bioplex_FC_controlMean(Bioplex_MFI_MeanNormalized,"R3","XO")
R4_XO_BP_FC <- Bioplex_FC_controlMean(Bioplex_MFI_MeanNormalized,"R4","XO")
R5_XO_BP_FC <- Bioplex_FC_controlMean(Bioplex_MFI_MeanNormalized,"R5","XO")
Bioplex_FC_STASNet <- rbind(R3_XX_BP_FC,
R4_XX_BP_FC,
R5_XX_BP_FC,
R3_XO_BP_FC,
R4_XO_BP_FC,
R5_XO_BP_FC)
#colnames(Bioplex_FC) <- gsub("replicate","Replicate",colnames(Bioplex_FC))
colnames(Bioplex_FC_STASNet) <- gsub("_Norm","",colnames(Bioplex_FC_STASNet))
Bioplex_FC_STASNet$Treatment <- gsub("\\.","+",Bioplex_FC_STASNet$Treatment)
Bioplex_FC_STASNet <- Bioplex_FC_STASNet %>%
select(x_status,Replicate, Treatment, Gsk3, Mek, mTor, Akt)
#WriteXLS::WriteXLS(Bioplex_FC_STASNet, "./OUTPUT/Bioplex_FC_STASNet.xls")
openxlsx::write.xlsx(Bioplex_FC_STASNet, "./OUTPUT/Bioplex_FC_STASNet.xlsx")
########## OUTPUT for PAPER #########
Bioplex_FC_STASNet_PAPER <- Bioplex_FC_STASNet
Bioplex_FC_STASNet_PAPER$Treatment <- gsub("\\.","+",Bioplex_FC_STASNet_PAPER$Treatment)
Bioplex_FC_STASNet_PAPER$Treatment <- gsub(" ","",Bioplex_FC_STASNet_PAPER$Treatment)
Bioplex_FC_STASNet_PAPER$Treatment <- gsub("c.\\d+","c",Bioplex_FC_STASNet_PAPER$Treatment) # To remove the .numbers[1:8] that had been addeded to rownames in case of "control" rows using make.names(unique=TRUE) because rownames could not be duplicated.
Bioplex_FC_STASNet_PAPER$Treatment <- gsub("^c$","DMSO",Bioplex_FC_STASNet_PAPER$Treatment)
Bioplex_FC_STASNet_PAPER$Replicate <- gsub("R3","Rep1",Bioplex_FC_STASNet_PAPER$Replicate)
Bioplex_FC_STASNet_PAPER$Replicate <- gsub("R4","Rep2",Bioplex_FC_STASNet_PAPER$Replicate)
Bioplex_FC_STASNet_PAPER$Replicate <- gsub("R5","Rep3",Bioplex_FC_STASNet_PAPER$Replicate)
Bioplex_FC_STASNet_PAPER <- Bioplex_FC_STASNet_PAPER %>%
select(x_status,Replicate, Treatment, Gsk3, Mek, mTor, Akt)
Bioplex_FC_STASNet_PAPER$Akt[Bioplex_FC_STASNet_PAPER$x_status == "XX" & Bioplex_FC_STASNet_PAPER$Replicate == "Rep3"] <- NA
Bioplex_FC_STASNet_PAPER$Akt[Bioplex_FC_STASNet_PAPER$x_status == "XO" & Bioplex_FC_STASNet_PAPER$Replicate == "Rep2"] <- NA
#WriteXLS::WriteXLS(Bioplex_FC_STASNet_PAPER, "./OUTPUT_PAPER/Bioplex_FC_STASNet_PAPER.xls")
openxlsx::write.xlsx(Bioplex_FC_STASNet_PAPER, "./OUTPUT_PAPER/Suppl_Table_S2_3_Bioplex_FC_STASNet.xlsx")
print("All steps executed")
Temp_Files <- list.files(path = ".", pattern = ".pdf")
Temp_Files
delete.files(Temp_Files)
file.remove(Temp_Files)

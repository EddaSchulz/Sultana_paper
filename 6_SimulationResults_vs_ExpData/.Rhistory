G1 <- Plot_SmallHeatMap_Single_ExpOnly(COMBO_Data_Aktp,SINGLE_Data_Aktp,"pAkt")
gt=set_panel_size(G1,width=unit(1,'cm'),height=unit(4.2,'cm'))
grid.arrange(gt)
ggsave("Fig1C_1_SingleHeatmap_Aktp_ExpOnly.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Single_Heatmaps/")
############### Gsk3p ###############
### Combination Data (Exp Data, Initial and Final Model)
Exp_XX_Gsk3p <- get_CombinationMatrix_new(Exp_Data, "XX","Gsk3_p")$Mean_values
Exp_XO_Gsk3p <- get_CombinationMatrix_new(Exp_Data, "XO","Gsk3_p")$Mean_values
Exp_XXXO_Gsk3p_Long <- prepMatrixView(Exp_XX_Gsk3p,Exp_XO_Gsk3p)
Exp_XXXO_Gsk3p_Long$Category <- rep("Exp", nrow(Exp_XXXO_Gsk3p_Long))
INIT_XX_Gsk3p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Gsk3_p")$Mean_values
INIT_XO_Gsk3p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Gsk3_p")$Mean_values
INIT_XXXO_Gsk3p_Long <- prepMatrixView(INIT_XX_Gsk3p,INIT_XO_Gsk3p)
INIT_XXXO_Gsk3p_Long$Category <- rep("Initial_Model", nrow(INIT_XXXO_Gsk3p_Long))
FINAL_XX_Gsk3p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Gsk3_p")$Mean_values
FINAL_XO_Gsk3p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Gsk3_p")$Mean_values
FINAL_XXXO_Gsk3p_Long <- prepMatrixView(FINAL_XX_Gsk3p,FINAL_XO_Gsk3p)
FINAL_XXXO_Gsk3p_Long$Category <- rep("Final_Model", nrow(FINAL_XXXO_Gsk3p_Long))
COMBO_Data_Gsk3p <- bind_rows(Exp_XXXO_Gsk3p_Long,INIT_XXXO_Gsk3p_Long,FINAL_XXXO_Gsk3p_Long)
COMBO_Data_Gsk3p$Category = factor(COMBO_Data_Gsk3p$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(COMBO_Data_Gsk3p,"./OUTPUT_PAPER/Comb_Heatmaps/csv_files/COMBO_Data_Gsk3p.csv")
### Single Data (Exp Data, Initial and Final Model)
SingleP_Exp_XX_Gsk3p <- get_CombinationMatrix_new(Exp_Data,"XX","Gsk3_p")$Mean_values_SinglePert
SingleP_Exp_XX_Gsk3p$x_status <- rep("XX",nrow(SingleP_Exp_XX_Gsk3p))
SingleP_Exp_XO_Gsk3p <- get_CombinationMatrix_new(Exp_Data,"XO","Gsk3_p")$Mean_values_SinglePert
SingleP_Exp_XO_Gsk3p$x_status <- rep("XO",nrow(SingleP_Exp_XO_Gsk3p))
SingleP_Exp_XXXO_Gsk3p <- bind_rows(SingleP_Exp_XX_Gsk3p,SingleP_Exp_XO_Gsk3p)
SingleP_Exp_XXXO_Gsk3p$Category <- rep("Exp", nrow(SingleP_Exp_XXXO_Gsk3p))
SingleP_INIT_XX_Gsk3p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Gsk3_p")$Mean_values_SinglePert
SingleP_INIT_XX_Gsk3p$x_status <- rep("XX",nrow(SingleP_INIT_XX_Gsk3p))
SingleP_INIT_XO_Gsk3p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Gsk3_p")$Mean_values_SinglePert
SingleP_INIT_XO_Gsk3p$x_status <- rep("XO",nrow(SingleP_INIT_XO_Gsk3p))
SingleP_INIT_XXXO_Gsk3p <- bind_rows(SingleP_INIT_XX_Gsk3p,SingleP_INIT_XO_Gsk3p)
SingleP_INIT_XXXO_Gsk3p$Category <- rep("Initial_Model", nrow(SingleP_INIT_XXXO_Gsk3p))
SingleP_FINAL_XX_Gsk3p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Gsk3_p")$Mean_values_SinglePert
SingleP_FINAL_XX_Gsk3p$x_status <- rep("XX",nrow(SingleP_FINAL_XX_Gsk3p))
SingleP_FINAL_XO_Gsk3p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Gsk3_p")$Mean_values_SinglePert
SingleP_FINAL_XO_Gsk3p$x_status <- rep("XO",nrow(SingleP_FINAL_XO_Gsk3p))
SingleP_FINAL_XXXO_Gsk3p <- bind_rows(SingleP_FINAL_XX_Gsk3p,SingleP_FINAL_XO_Gsk3p)
SingleP_FINAL_XXXO_Gsk3p$Category <- rep("Final_Model", nrow(SingleP_FINAL_XXXO_Gsk3p))
SINGLE_Data_Gsk3p <- bind_rows(SingleP_Exp_XXXO_Gsk3p,SingleP_INIT_XXXO_Gsk3p,SingleP_FINAL_XXXO_Gsk3p)
SINGLE_Data_Gsk3p$Category = factor(SINGLE_Data_Gsk3p$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(SINGLE_Data_Gsk3p,"./OUTPUT_PAPER/Single_Heatmaps/csv_files/SINGLE_Data_Gsk3p.csv")
##### Plotting Heatmaps ###
#### Combination Heatmap
G1 <- Plot_SmallHeatMap_OnlyComb(COMBO_Data_Gsk3p,"pGsk3")
gt=set_panel_size(G1,width=unit(2,'cm'),height=unit(2,'cm'))
grid.arrange(gt)
ggsave("Fig3A_2_CombHeatmap_Gsk3p.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Comb_Heatmaps/") # device = cairo_pdf was tried to get the greek letter in pdf, but not yet successful in that
#### Single Heatmap
G1 <- Plot_SmallHeatMap_Single_ExpOnly(COMBO_Data_Gsk3p,SINGLE_Data_Gsk3p,"pGsk3")
gt=set_panel_size(G1,width=unit(1,'cm'),height=unit(4.2,'cm'))
grid.arrange(gt)
ggsave("Fig1C_2_SingleHeatmap_Gsk3p_ExpOnly.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Single_Heatmaps/")
############### mTorp ###############
### Combination Data (Exp Data, Initial and Final Model)
Exp_XX_mTorp <- get_CombinationMatrix_new(Exp_Data, "XX","mTor_p")$Mean_values
Exp_XO_mTorp <- get_CombinationMatrix_new(Exp_Data, "XO","mTor_p")$Mean_values
Exp_XXXO_mTorp_Long <- prepMatrixView(Exp_XX_mTorp,Exp_XO_mTorp)
Exp_XXXO_mTorp_Long$Category <- rep("Exp", nrow(Exp_XXXO_mTorp_Long))
INIT_XX_mTorp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","mTor_p")$Mean_values
INIT_XO_mTorp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","mTor_p")$Mean_values
INIT_XXXO_mTorp_Long <- prepMatrixView(INIT_XX_mTorp,INIT_XO_mTorp)
INIT_XXXO_mTorp_Long$Category <- rep("Initial_Model", nrow(INIT_XXXO_mTorp_Long))
FINAL_XX_mTorp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","mTor_p")$Mean_values
FINAL_XO_mTorp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","mTor_p")$Mean_values
FINAL_XXXO_mTorp_Long <- prepMatrixView(FINAL_XX_mTorp,FINAL_XO_mTorp)
FINAL_XXXO_mTorp_Long$Category <- rep("Final_Model", nrow(FINAL_XXXO_mTorp_Long))
COMBO_Data_mTorp <- bind_rows(Exp_XXXO_mTorp_Long,INIT_XXXO_mTorp_Long,FINAL_XXXO_mTorp_Long)
COMBO_Data_mTorp$Category = factor(COMBO_Data_mTorp$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(COMBO_Data_mTorp,"./OUTPUT_PAPER/Comb_Heatmaps/csv_files/COMBO_Data_mTorp.csv")
### Single Data (Exp Data, Initial and Final Model)
SingleP_Exp_XX_mTorp <- get_CombinationMatrix_new(Exp_Data,"XX","mTor_p")$Mean_values_SinglePert
SingleP_Exp_XX_mTorp$x_status <- rep("XX",nrow(SingleP_Exp_XX_mTorp))
SingleP_Exp_XO_mTorp <- get_CombinationMatrix_new(Exp_Data,"XO","mTor_p")$Mean_values_SinglePert
SingleP_Exp_XO_mTorp$x_status <- rep("XO",nrow(SingleP_Exp_XO_mTorp))
SingleP_Exp_XXXO_mTorp <- bind_rows(SingleP_Exp_XX_mTorp,SingleP_Exp_XO_mTorp)
SingleP_Exp_XXXO_mTorp$Category <- rep("Exp", nrow(SingleP_Exp_XXXO_mTorp))
SingleP_INIT_XX_mTorp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","mTor_p")$Mean_values_SinglePert
SingleP_INIT_XX_mTorp$x_status <- rep("XX",nrow(SingleP_INIT_XX_mTorp))
SingleP_INIT_XO_mTorp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","mTor_p")$Mean_values_SinglePert
SingleP_INIT_XO_mTorp$x_status <- rep("XO",nrow(SingleP_INIT_XO_mTorp))
SingleP_INIT_XXXO_mTorp <- bind_rows(SingleP_INIT_XX_mTorp,SingleP_INIT_XO_mTorp)
SingleP_INIT_XXXO_mTorp$Category <- rep("Initial_Model", nrow(SingleP_INIT_XXXO_mTorp))
SingleP_FINAL_XX_mTorp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","mTor_p")$Mean_values_SinglePert
SingleP_FINAL_XX_mTorp$x_status <- rep("XX",nrow(SingleP_FINAL_XX_mTorp))
SingleP_FINAL_XO_mTorp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","mTor_p")$Mean_values_SinglePert
SingleP_FINAL_XO_mTorp$x_status <- rep("XO",nrow(SingleP_FINAL_XO_mTorp))
SingleP_FINAL_XXXO_mTorp <- bind_rows(SingleP_FINAL_XX_mTorp,SingleP_FINAL_XO_mTorp)
SingleP_FINAL_XXXO_mTorp$Category <- rep("Final_Model", nrow(SingleP_FINAL_XXXO_mTorp))
SINGLE_Data_mTorp <- bind_rows(SingleP_Exp_XXXO_mTorp,SingleP_INIT_XXXO_mTorp,SingleP_FINAL_XXXO_mTorp)
SINGLE_Data_mTorp$Category = factor(SINGLE_Data_mTorp$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(SINGLE_Data_mTorp,"./OUTPUT_PAPER/Single_Heatmaps/csv_files/SINGLE_Data_mTorp.csv")
##### Plotting Heatmaps ###
#### Combination Heatmap
G1 <- Plot_SmallHeatMap_OnlyComb(COMBO_Data_mTorp,"pmTor")
gt=set_panel_size(G1,width=unit(2,'cm'),height=unit(2,'cm'))
grid.arrange(gt)
ggsave("Fig3A_3_CombHeatmap_mTorp.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Comb_Heatmaps/") # device = cairo_pdf was tried to get the greek letter in pdf, but not yet successful in that
#### Single Heatmap
G1 <- Plot_SmallHeatMap_Single_ExpOnly(COMBO_Data_mTorp,SINGLE_Data_mTorp,"pmTor")
gt=set_panel_size(G1,width=unit(1,'cm'),height=unit(4.2,'cm'))
grid.arrange(gt)
ggsave("Fig1C_3_SingleHeatmap_mTorp_ExpOnly.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Single_Heatmaps/")
################### Mekp ###################
### Combination Data (Exp Data, Initial and Final Model)
Exp_XX_Mekp <- get_CombinationMatrix_new(Exp_Data, "XX","Mek_p")$Mean_values
Exp_XO_Mekp <- get_CombinationMatrix_new(Exp_Data, "XO","Mek_p")$Mean_values
Exp_XXXO_Mekp_Long <- prepMatrixView(Exp_XX_Mekp,Exp_XO_Mekp)
Exp_XXXO_Mekp_Long$Category <- rep("Exp", nrow(Exp_XXXO_Mekp_Long))
INIT_XX_Mekp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Mek_p")$Mean_values
INIT_XO_Mekp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Mek_p")$Mean_values
INIT_XXXO_Mekp_Long <- prepMatrixView(INIT_XX_Mekp,INIT_XO_Mekp)
INIT_XXXO_Mekp_Long$Category <- rep("Initial_Model", nrow(INIT_XXXO_Mekp_Long))
FINAL_XX_Mekp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Mek_p")$Mean_values
FINAL_XO_Mekp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Mek_p")$Mean_values
FINAL_XXXO_Mekp_Long <- prepMatrixView(FINAL_XX_Mekp,FINAL_XO_Mekp)
FINAL_XXXO_Mekp_Long$Category <- rep("Final_Model", nrow(FINAL_XXXO_Mekp_Long))
COMBO_Data_Mekp <- bind_rows(Exp_XXXO_Mekp_Long,INIT_XXXO_Mekp_Long,FINAL_XXXO_Mekp_Long)
COMBO_Data_Mekp$Category = factor(COMBO_Data_Mekp$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(COMBO_Data_Mekp,"./OUTPUT_PAPER/Comb_Heatmaps/csv_files/COMBO_Data_Mekp.csv")
### Single Data (Exp Data, Initial and Final Model)
SingleP_Exp_XX_Mekp <- get_CombinationMatrix_new(Exp_Data,"XX","Mek_p")$Mean_values_SinglePert
SingleP_Exp_XX_Mekp$x_status <- rep("XX",nrow(SingleP_Exp_XX_Mekp))
SingleP_Exp_XO_Mekp <- get_CombinationMatrix_new(Exp_Data,"XO","Mek_p")$Mean_values_SinglePert
SingleP_Exp_XO_Mekp$x_status <- rep("XO",nrow(SingleP_Exp_XO_Mekp))
SingleP_Exp_XXXO_Mekp <- bind_rows(SingleP_Exp_XX_Mekp,SingleP_Exp_XO_Mekp)
SingleP_Exp_XXXO_Mekp$Category <- rep("Exp", nrow(SingleP_Exp_XXXO_Mekp))
SingleP_INIT_XX_Mekp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Mek_p")$Mean_values_SinglePert
SingleP_INIT_XX_Mekp$x_status <- rep("XX",nrow(SingleP_INIT_XX_Mekp))
SingleP_INIT_XO_Mekp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Mek_p")$Mean_values_SinglePert
SingleP_INIT_XO_Mekp$x_status <- rep("XO",nrow(SingleP_INIT_XO_Mekp))
SingleP_INIT_XXXO_Mekp <- bind_rows(SingleP_INIT_XX_Mekp,SingleP_INIT_XO_Mekp)
SingleP_INIT_XXXO_Mekp$Category <- rep("Initial_Model", nrow(SingleP_INIT_XXXO_Mekp))
SingleP_FINAL_XX_Mekp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Mek_p")$Mean_values_SinglePert
SingleP_FINAL_XX_Mekp$x_status <- rep("XX",nrow(SingleP_FINAL_XX_Mekp))
SingleP_FINAL_XO_Mekp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Mek_p")$Mean_values_SinglePert
SingleP_FINAL_XO_Mekp$x_status <- rep("XO",nrow(SingleP_FINAL_XO_Mekp))
SingleP_FINAL_XXXO_Mekp <- bind_rows(SingleP_FINAL_XX_Mekp,SingleP_FINAL_XO_Mekp)
SingleP_FINAL_XXXO_Mekp$Category <- rep("Final_Model", nrow(SingleP_FINAL_XXXO_Mekp))
SINGLE_Data_Mekp <- bind_rows(SingleP_Exp_XXXO_Mekp,SingleP_INIT_XXXO_Mekp,SingleP_FINAL_XXXO_Mekp)
SINGLE_Data_Mekp$Category = factor(SINGLE_Data_Mekp$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(SINGLE_Data_Mekp,"./OUTPUT_PAPER/Single_Heatmaps/csv_files/SINGLE_Data_Mekp.csv")
##### Plotting Heatmaps ###
#### Combination Heatmap
G1 <- Plot_SmallHeatMap_OnlyComb(COMBO_Data_Mekp,"pMek")
gt=set_panel_size(G1,width=unit(2,'cm'),height=unit(2,'cm'))
grid.arrange(gt)
ggsave("Fig3A_4_CombHeatmap_Mekp.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Comb_Heatmaps/") # device = cairo_pdf was tried to get the greek letter in pdf, but not yet successful in that
#### Single Heatmap
G1 <- Plot_SmallHeatMap_Single_ExpOnly(COMBO_Data_Mekp,SINGLE_Data_Mekp,"pMek")
gt=set_panel_size(G1,width=unit(1,'cm'),height=unit(4.2,'cm'))
grid.arrange(gt)
ggsave("Fig1C_4_SingleHeatmap_Mekp_ExpOnly.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Single_Heatmaps/")
############# Erkp #############
### Combination Data (Exp Data, Initial and Final Model)
Exp_XX_Erkp <- get_CombinationMatrix_new(Exp_Data, "XX","Erk_p")$Mean_values
Exp_XO_Erkp <- get_CombinationMatrix_new(Exp_Data, "XO","Erk_p")$Mean_values
Exp_XXXO_Erkp_Long <- prepMatrixView(Exp_XX_Erkp,Exp_XO_Erkp)
Exp_XXXO_Erkp_Long$Category <- rep("Exp", nrow(Exp_XXXO_Erkp_Long))
INIT_XX_Erkp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Erk_p")$Mean_values
INIT_XO_Erkp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Erk_p")$Mean_values
INIT_XXXO_Erkp_Long <- prepMatrixView(INIT_XX_Erkp,INIT_XO_Erkp)
INIT_XXXO_Erkp_Long$Category <- rep("Initial_Model", nrow(INIT_XXXO_Erkp_Long))
FINAL_XX_Erkp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Erk_p")$Mean_values
FINAL_XO_Erkp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Erk_p")$Mean_values
FINAL_XXXO_Erkp_Long <- prepMatrixView(FINAL_XX_Erkp,FINAL_XO_Erkp)
FINAL_XXXO_Erkp_Long$Category <- rep("Final_Model", nrow(FINAL_XXXO_Erkp_Long))
COMBO_Data_Erkp <- bind_rows(Exp_XXXO_Erkp_Long,INIT_XXXO_Erkp_Long,FINAL_XXXO_Erkp_Long)
COMBO_Data_Erkp$Category = factor(COMBO_Data_Erkp$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(COMBO_Data_Erkp,"./OUTPUT_PAPER/Comb_Heatmaps/csv_files/COMBO_Data_Erkp.csv")
### Single Data (Exp Data, Initial and Final Model)
SingleP_Exp_XX_Erkp <- get_CombinationMatrix_new(Exp_Data,"XX","Erk_p")$Mean_values_SinglePert
SingleP_Exp_XX_Erkp$x_status <- rep("XX",nrow(SingleP_Exp_XX_Erkp))
SingleP_Exp_XO_Erkp <- get_CombinationMatrix_new(Exp_Data,"XO","Erk_p")$Mean_values_SinglePert
SingleP_Exp_XO_Erkp$x_status <- rep("XO",nrow(SingleP_Exp_XO_Erkp))
SingleP_Exp_XXXO_Erkp <- bind_rows(SingleP_Exp_XX_Erkp,SingleP_Exp_XO_Erkp)
SingleP_Exp_XXXO_Erkp$Category <- rep("Exp", nrow(SingleP_Exp_XXXO_Erkp))
SingleP_INIT_XX_Erkp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Erk_p")$Mean_values_SinglePert
SingleP_INIT_XX_Erkp$x_status <- rep("XX",nrow(SingleP_INIT_XX_Erkp))
SingleP_INIT_XO_Erkp <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Erk_p")$Mean_values_SinglePert
SingleP_INIT_XO_Erkp$x_status <- rep("XO",nrow(SingleP_INIT_XO_Erkp))
SingleP_INIT_XXXO_Erkp <- bind_rows(SingleP_INIT_XX_Erkp,SingleP_INIT_XO_Erkp)
SingleP_INIT_XXXO_Erkp$Category <- rep("Initial_Model", nrow(SingleP_INIT_XXXO_Erkp))
SingleP_FINAL_XX_Erkp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Erk_p")$Mean_values_SinglePert
SingleP_FINAL_XX_Erkp$x_status <- rep("XX",nrow(SingleP_FINAL_XX_Erkp))
SingleP_FINAL_XO_Erkp <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Erk_p")$Mean_values_SinglePert
SingleP_FINAL_XO_Erkp$x_status <- rep("XO",nrow(SingleP_FINAL_XO_Erkp))
SingleP_FINAL_XXXO_Erkp <- bind_rows(SingleP_FINAL_XX_Erkp,SingleP_FINAL_XO_Erkp)
SingleP_FINAL_XXXO_Erkp$Category <- rep("Final_Model", nrow(SingleP_FINAL_XXXO_Erkp))
SINGLE_Data_Erkp <- bind_rows(SingleP_Exp_XXXO_Erkp,SingleP_INIT_XXXO_Erkp,SingleP_FINAL_XXXO_Erkp)
SINGLE_Data_Erkp$Category = factor(SINGLE_Data_Erkp$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(SINGLE_Data_Erkp,"./OUTPUT_PAPER/Single_Heatmaps/csv_files/SINGLE_Data_Erkp.csv")
##### Plotting Heatmaps ###
#### Combination Heatmap
G1 <- Plot_SmallHeatMap_OnlyComb(COMBO_Data_Erkp,"pErk")
gt=set_panel_size(G1,width=unit(2,'cm'),height=unit(2,'cm'))
grid.arrange(gt)
ggsave("Fig3A_5_CombHeatmap_Erkp.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Comb_Heatmaps/") # device = cairo_pdf was tried to get the greek letter in pdf, but not yet successful in that
#### Single Heatmap
G1 <- Plot_SmallHeatMap_Single_ExpOnly(COMBO_Data_Erkp,SINGLE_Data_Erkp,"pErk")
gt=set_panel_size(G1,width=unit(1,'cm'),height=unit(4.2,'cm'))
grid.arrange(gt)
ggsave("Fig1C_5_SingleHeatmap_Erkp_ExpOnly.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Single_Heatmaps/")
############# Stat3p #############
### Combination Data (Exp Data, Initial and Final Model)
Exp_XX_Stat3p <- get_CombinationMatrix_new(Exp_Data, "XX","Stat3_p")$Mean_values
Exp_XO_Stat3p <- get_CombinationMatrix_new(Exp_Data, "XO","Stat3_p")$Mean_values
Exp_XXXO_Stat3p_Long <- prepMatrixView(Exp_XX_Stat3p,Exp_XO_Stat3p)
Exp_XXXO_Stat3p_Long$Category <- rep("Exp", nrow(Exp_XXXO_Stat3p_Long))
INIT_XX_Stat3p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Stat3_p")$Mean_values
INIT_XO_Stat3p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Stat3_p")$Mean_values
INIT_XXXO_Stat3p_Long <- prepMatrixView(INIT_XX_Stat3p,INIT_XO_Stat3p)
INIT_XXXO_Stat3p_Long$Category <- rep("Initial_Model", nrow(INIT_XXXO_Stat3p_Long))
FINAL_XX_Stat3p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Stat3_p")$Mean_values
FINAL_XO_Stat3p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Stat3_p")$Mean_values
FINAL_XXXO_Stat3p_Long <- prepMatrixView(FINAL_XX_Stat3p,FINAL_XO_Stat3p)
FINAL_XXXO_Stat3p_Long$Category <- rep("Final_Model", nrow(FINAL_XXXO_Stat3p_Long))
COMBO_Data_Stat3p <- bind_rows(Exp_XXXO_Stat3p_Long,INIT_XXXO_Stat3p_Long,FINAL_XXXO_Stat3p_Long)
COMBO_Data_Stat3p$Category = factor(COMBO_Data_Stat3p$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(COMBO_Data_Stat3p,"./OUTPUT_PAPER/Comb_Heatmaps/csv_files/COMBO_Data_Stat3p.csv")
### Single Data (Exp Data, Initial and Final Model)
SingleP_Exp_XX_Stat3p <- get_CombinationMatrix_new(Exp_Data,"XX","Stat3_p")$Mean_values_SinglePert
SingleP_Exp_XX_Stat3p$x_status <- rep("XX",nrow(SingleP_Exp_XX_Stat3p))
SingleP_Exp_XO_Stat3p <- get_CombinationMatrix_new(Exp_Data,"XO","Stat3_p")$Mean_values_SinglePert
SingleP_Exp_XO_Stat3p$x_status <- rep("XO",nrow(SingleP_Exp_XO_Stat3p))
SingleP_Exp_XXXO_Stat3p <- bind_rows(SingleP_Exp_XX_Stat3p,SingleP_Exp_XO_Stat3p)
SingleP_Exp_XXXO_Stat3p$Category <- rep("Exp", nrow(SingleP_Exp_XXXO_Stat3p))
SingleP_INIT_XX_Stat3p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Stat3_p")$Mean_values_SinglePert
SingleP_INIT_XX_Stat3p$x_status <- rep("XX",nrow(SingleP_INIT_XX_Stat3p))
SingleP_INIT_XO_Stat3p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Stat3_p")$Mean_values_SinglePert
SingleP_INIT_XO_Stat3p$x_status <- rep("XO",nrow(SingleP_INIT_XO_Stat3p))
SingleP_INIT_XXXO_Stat3p <- bind_rows(SingleP_INIT_XX_Stat3p,SingleP_INIT_XO_Stat3p)
SingleP_INIT_XXXO_Stat3p$Category <- rep("Initial_Model", nrow(SingleP_INIT_XXXO_Stat3p))
SingleP_FINAL_XX_Stat3p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Stat3_p")$Mean_values_SinglePert
SingleP_FINAL_XX_Stat3p$x_status <- rep("XX",nrow(SingleP_FINAL_XX_Stat3p))
SingleP_FINAL_XO_Stat3p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Stat3_p")$Mean_values_SinglePert
SingleP_FINAL_XO_Stat3p$x_status <- rep("XO",nrow(SingleP_FINAL_XO_Stat3p))
SingleP_FINAL_XXXO_Stat3p <- bind_rows(SingleP_FINAL_XX_Stat3p,SingleP_FINAL_XO_Stat3p)
SingleP_FINAL_XXXO_Stat3p$Category <- rep("Final_Model", nrow(SingleP_FINAL_XXXO_Stat3p))
SINGLE_Data_Stat3p <- bind_rows(SingleP_Exp_XXXO_Stat3p,SingleP_INIT_XXXO_Stat3p,SingleP_FINAL_XXXO_Stat3p)
SINGLE_Data_Stat3p$Category = factor(SINGLE_Data_Stat3p$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(SINGLE_Data_Stat3p,"./OUTPUT_PAPER/Single_Heatmaps/csv_files/SINGLE_Data_Stat3p.csv")
##### Plotting Heatmaps ###
#### Combination Heatmap
G1 <- Plot_SmallHeatMap_OnlyComb(COMBO_Data_Stat3p,"pStat3")
gt=set_panel_size(G1,width=unit(2,'cm'),height=unit(2,'cm'))
grid.arrange(gt)
ggsave("Fig3A_6_CombHeatmap_Stat3p.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Comb_Heatmaps/") # device = cairo_pdf was tried to get the greek letter in pdf, but not yet successful in that
#### Single Heatmap
G1 <- Plot_SmallHeatMap_Single_ExpOnly(COMBO_Data_Stat3p,SINGLE_Data_Stat3p,"pStat3")
gt=set_panel_size(G1,width=unit(1,'cm'),height=unit(4.2,'cm'))
grid.arrange(gt)
ggsave("Fig1C_6_SingleHeatmap_Stat3p_ExpOnly.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Single_Heatmaps/")
############ Smad2p ############
### Combination Data (Exp Data, Initial and Final Model)
Exp_XX_Smad2p <- get_CombinationMatrix_new(Exp_Data, "XX","Smad2_p")$Mean_values
Exp_XO_Smad2p <- get_CombinationMatrix_new(Exp_Data, "XO","Smad2_p")$Mean_values
Exp_XXXO_Smad2p_Long <- prepMatrixView(Exp_XX_Smad2p,Exp_XO_Smad2p)
Exp_XXXO_Smad2p_Long$Category <- rep("Exp", nrow(Exp_XXXO_Smad2p_Long))
INIT_XX_Smad2p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Smad2_p")$Mean_values
INIT_XO_Smad2p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Smad2_p")$Mean_values
INIT_XXXO_Smad2p_Long <- prepMatrixView(INIT_XX_Smad2p,INIT_XO_Smad2p)
INIT_XXXO_Smad2p_Long$Category <- rep("Initial_Model", nrow(INIT_XXXO_Smad2p_Long))
FINAL_XX_Smad2p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Smad2_p")$Mean_values
FINAL_XO_Smad2p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Smad2_p")$Mean_values
FINAL_XXXO_Smad2p_Long <- prepMatrixView(FINAL_XX_Smad2p,FINAL_XO_Smad2p)
FINAL_XXXO_Smad2p_Long$Category <- rep("Final_Model", nrow(FINAL_XXXO_Smad2p_Long))
COMBO_Data_Smad2p <- bind_rows(Exp_XXXO_Smad2p_Long,INIT_XXXO_Smad2p_Long,FINAL_XXXO_Smad2p_Long)
COMBO_Data_Smad2p$Category = factor(COMBO_Data_Smad2p$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(COMBO_Data_Smad2p,"./OUTPUT_PAPER/Comb_Heatmaps/csv_files/COMBO_Data_Smad2p.csv")
### Single Data (Exp Data, Initial and Final Model)
SingleP_Exp_XX_Smad2p <- get_CombinationMatrix_new(Exp_Data,"XX","Smad2_p")$Mean_values_SinglePert
SingleP_Exp_XX_Smad2p$x_status <- rep("XX",nrow(SingleP_Exp_XX_Smad2p))
SingleP_Exp_XO_Smad2p <- get_CombinationMatrix_new(Exp_Data,"XO","Smad2_p")$Mean_values_SinglePert
SingleP_Exp_XO_Smad2p$x_status <- rep("XO",nrow(SingleP_Exp_XO_Smad2p))
SingleP_Exp_XXXO_Smad2p <- bind_rows(SingleP_Exp_XX_Smad2p,SingleP_Exp_XO_Smad2p)
SingleP_Exp_XXXO_Smad2p$Category <- rep("Exp", nrow(SingleP_Exp_XXXO_Smad2p))
SingleP_INIT_XX_Smad2p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XX","Smad2_p")$Mean_values_SinglePert
SingleP_INIT_XX_Smad2p$x_status <- rep("XX",nrow(SingleP_INIT_XX_Smad2p))
SingleP_INIT_XO_Smad2p <- get_CombinationMatrix_Simulation(Init_Model_SimulationResults, "XO","Smad2_p")$Mean_values_SinglePert
SingleP_INIT_XO_Smad2p$x_status <- rep("XO",nrow(SingleP_INIT_XO_Smad2p))
SingleP_INIT_XXXO_Smad2p <- bind_rows(SingleP_INIT_XX_Smad2p,SingleP_INIT_XO_Smad2p)
SingleP_INIT_XXXO_Smad2p$Category <- rep("Initial_Model", nrow(SingleP_INIT_XXXO_Smad2p))
SingleP_FINAL_XX_Smad2p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XX","Smad2_p")$Mean_values_SinglePert
SingleP_FINAL_XX_Smad2p$x_status <- rep("XX",nrow(SingleP_FINAL_XX_Smad2p))
SingleP_FINAL_XO_Smad2p <- get_CombinationMatrix_Simulation(FinalModel_SimulationResults, "XO","Smad2_p")$Mean_values_SinglePert
SingleP_FINAL_XO_Smad2p$x_status <- rep("XO",nrow(SingleP_FINAL_XO_Smad2p))
SingleP_FINAL_XXXO_Smad2p <- bind_rows(SingleP_FINAL_XX_Smad2p,SingleP_FINAL_XO_Smad2p)
SingleP_FINAL_XXXO_Smad2p$Category <- rep("Final_Model", nrow(SingleP_FINAL_XXXO_Smad2p))
SINGLE_Data_Smad2p <- bind_rows(SingleP_Exp_XXXO_Smad2p,SingleP_INIT_XXXO_Smad2p,SingleP_FINAL_XXXO_Smad2p)
SINGLE_Data_Smad2p$Category = factor(SINGLE_Data_Smad2p$Category, levels = c("Exp", "Initial_Model", "Final_Model"))
write.csv(SINGLE_Data_Smad2p,"./OUTPUT_PAPER/Single_Heatmaps/csv_files/SINGLE_Data_Smad2p.csv")
##### Plotting Heatmaps ###
#### Combination Heatmap
G1 <- Plot_SmallHeatMap_OnlyComb(COMBO_Data_Smad2p,"pSmad2")
gt=set_panel_size(G1,width=unit(2,'cm'),height=unit(2,'cm'))
grid.arrange(gt)
ggsave("Fig3A_7_CombHeatmap_Smad2p.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Comb_Heatmaps/") # device = cairo_pdf was tried to get the greek letter in pdf, but not yet successful in that
#### Single Heatmap
G1 <- Plot_SmallHeatMap_Single_ExpOnly(COMBO_Data_Smad2p,SINGLE_Data_Smad2p,"pSmad2")
gt=set_panel_size(G1,width=unit(1,'cm'),height=unit(4.2,'cm'))
grid.arrange(gt)
ggsave("Fig1C_7_SingleHeatmap_Smad2p_ExpOnly.pdf", gt, dpi=300, useDingbats=FALSE ,path = "./OUTPUT_PAPER/Single_Heatmaps/")
print("All heatmaps saved")
#!/usr/bin/Rscript
library(STASNet)
library(ggplot2)
library(gdata) #read.xls
library(plyr) # always load plyr before dplyr
library(dplyr)
library(tidyr)
library(pheatmap)
library(RColorBrewer)
library(reshape2)
library("corrplot", lib.loc="~/Library/R/3.3/library") # for correlation matrices
library(cowplot) # for plot_grid , for get_legend
library(egg) #needed for set_panel_size, to get predefined sizes of figure panels.
#library(tidyverse)
source("/Users/sultana/PHD_PROJECT_Zeba/Zeba_PhD_PAPER/SCRIPTS_Sultana_etal_2021/PS10_ValidationExp/ValidationPlot_Functions/U_Functions_ValidationExp_Plotting.R")
source("./Functions_Plotting_PointRange.R")
########### Reading in ALL_DATA (ie 3 Exp replicates+ Simulation from Initial and Final Models), subset ExpData from here and do t-tests
ALL_DATA <- read.csv("./OUTPUT/ALL_DATA.csv")
ALL_DATA <- ALL_DATA %>%
select(-c(X))
ALL_DATA <- ALL_DATA %>%
mutate(Cat3 = case_when(grepl("Exp", Category) ~ "Exp",
grepl("Init", Category) ~ "Initial_Model",
grepl("Final", Category) ~ "Final_Model"))
ALL_DATA$Cat3 = factor(ALL_DATA$Cat3, levels = c("Exp","Initial_Model","Final_Model"))
colnames(ALL_DATA) <- gsub("Gsk3_p", "pGsk3", colnames(ALL_DATA) )
colnames(ALL_DATA) <- gsub("Mek_p", "pMek", colnames(ALL_DATA) )
colnames(ALL_DATA) <- gsub("mTor_p", "pmTor", colnames(ALL_DATA) )
colnames(ALL_DATA) <- gsub("Akt_p", "pAkt", colnames(ALL_DATA) )
colnames(ALL_DATA) <- gsub("Erk_p", "pErk", colnames(ALL_DATA) )
colnames(ALL_DATA) <- gsub("Stat3_p", "pStat3", colnames(ALL_DATA) )
colnames(ALL_DATA) <- gsub("Smad2_p", "pSmad2", colnames(ALL_DATA) )
## Separating the Exp and Simulation Data :
Exp_DATA <- ALL_DATA %>%
filter(grepl("Exp", Category))
Sim_DATA <- ALL_DATA %>%
filter(!grepl("Exp", Category))
#### Doing the T-Tests
perturbations <- unique(as.character(Exp_DATA$Treatment_id)) # 53 perturbations in all
analytes <- colnames(Exp_DATA)[1:7] # 9 : 4 From Bioplex("Gsk3b","Mek","mTor","Akt" - Bioplex Stat3 is not to be used) and 5 from WB("ERKp","STAT3p","SMAD2p","bCatenin","GAPDH")
t_result = list() #prep empty list to store t-test results
#res <- t.test(weight ~ group, data = my_data, var.equal = TRUE)
for(perturbation_name in perturbations){
##Unhash To test
#perturbation_name = perturbations[2]
each_perturbation_data <-  Exp_DATA %>%
filter(Treatment_id == perturbation_name)
for (analyte in analytes){
##Unhash To test
#analyte = analytes[3]
subdata <- each_perturbation_data %>%
select(c(substituteDirect(analyte),Category))
# t_result[[perturbation_name]][[analyte]]$a_pvalue <- t.test(get(substituteDirect(analyte)) ~ Category, data = subdata, var.equal = FALSE)$p.value   # This WORKS
subdata_XX <- subdata %>%
filter(grepl("XX",Category)) %>%
select(substituteDirect(analyte))
subdata_XO <- subdata %>%
filter(grepl("XO",Category))%>%
select(substituteDirect(analyte))
# t_result[[perturbation_name]][[analyte]]$a_pvalue <-
#   t.test(as.data.frame(subdata_XX[,analyte]),as.data.frame(subdata_XO[,analyte]), alternative = "two.sided", var.equal = FALSE)$p.value
#ANS <- t.test(as.data.frame(subdata_XX),as.data.frame(subdata_XO),alternative = "two.sided", var.equal = FALSE)
t_test_XX_XO <- t.test(as.data.frame(subdata_XX),as.data.frame(subdata_XO),alternative = "two.sided", var.equal = FALSE) #Paired = FALSE by default
t_result[[perturbation_name]][[analyte]]$XX_mean<- t_test_XX_XO$estimate[1]
t_result[[perturbation_name]][[analyte]]$XO_mean<- t_test_XX_XO$estimate[2]
t_result[[perturbation_name]][[analyte]]$XX_XO_pvalue<- t_test_XX_XO$p.value
#One-sample t-tests to check difference from 0
t_result[[perturbation_name]][[analyte]]$XX_0_pvalue <- t.test(as.data.frame(subdata_XX), mu = 0, alternative = "two.sided")$p.value
t_result[[perturbation_name]][[analyte]]$XO_0_pvalue <- t.test(as.data.frame(subdata_XO), mu = 0, alternative = "two.sided")$p.value
#but I need to save atleast two values in this list so that later when I convert the t-test results to dataframe the column names are correctly retained. For some reason it does not work correctly if I save only pvalue
}
}
t_result_df <- ldply(t_result, data.frame) #to convert list to dataframe ldply is from package (plyr)
colnames(t_result_df) <- gsub("\\.id","Treatment_id",colnames(t_result_df))
t_result_df$Treatment_id <- gsub("\\+NA","",t_result_df$Treatment_id)
write.csv(t_result_df, "./OUTPUT/t_result_df.csv")
print(" T-tests on Exp Data : results saved : t_result_df.csv in OUTPUT")
############## Plotting Fig3D : Max difference between XX and XO #########
#Subsets the data for one analyte
# --> filters those rows where there is significant diff between XX and XO
# --> arranges the rows in descending order of XX minus XO values(absolute)
t_result_df_Akt_filt <- Filter_XXXOpval_perAnalyte(t_result_df, "pAkt", 0.1) # pAkt was very variable, none passed the TH of p<0.05
t_result_df_Gsk3_filt <- Filter_XXXOpval_perAnalyte(t_result_df, "pGsk3", 0.05)
t_result_df_mTor_filt <- Filter_XXXOpval_perAnalyte(t_result_df, "pmTor", 0.05)
t_result_df_Mek_filt <- Filter_XXXOpval_perAnalyte(t_result_df, "pMek", 0.05)
t_result_df_Erk_filt <- Filter_XXXOpval_perAnalyte(t_result_df, "pErk", 0.05)
t_result_df_Stat3_filt <- Filter_XXXOpval_perAnalyte(t_result_df, "pStat3", 0.05)
t_result_df_Smad2_filt <- Filter_XXXOpval_perAnalyte(t_result_df, "pSmad2", 0.05)
### Collating the 1st row(corresponding to highest absoulte XXminusXO) from all the above analyte-wise subsets
Selected_XXXODiff_AnalyteWise <- bind_rows(t_result_df_Akt_filt[1,],
t_result_df_Gsk3_filt[1,],
t_result_df_mTor_filt[1,],
t_result_df_Mek_filt[1,],
t_result_df_Erk_filt[1,],
t_result_df_Stat3_filt[1,],
t_result_df_Smad2_filt[1,])
XXXODiff_AnalyteWise_Selected_Pert <- as.character(Selected_XXXODiff_AnalyteWise$Treatment_id)
XXXODiff_AnalyteWise_Selected_Analyte <- as.character(Selected_XXXODiff_AnalyteWise$Analyte)
XXXODiff_AnalyteWise_Legend <- Loop_MaxDiff(ALL_DATA,c("XX","XO"),XXXODiff_AnalyteWise_Selected_Pert, XXXODiff_AnalyteWise_Selected_Analyte)
df_leg <- get_legend(XXXODiff_AnalyteWise_Legend[[2]])
nRows_plots = 1
nCols_plots = 7
XXXODiff_AnalyteWise <- RemoveLegend_func(XXXODiff_AnalyteWise_Legend)
XXXODiff_AnalyteWise <- lapply(
XXXODiff_AnalyteWise ,
set_panel_size,
width = unit(1.3, "cm"),
height = unit(1.8, "cm"))
final_plot <- grid.arrange(arrangeGrob(grobs=XXXODiff_AnalyteWise, nrow = nRows_plots),
arrangeGrob(nullGrob(),df_leg,nullGrob(), nrow = 1),
#top = textGrob("Title Text Holder Here", gp = gpar(fontsize = 12, font = 2)),
nrow = 2,
heights = c(nRows_plots,0.5))
ggsave(file="Fig3D_XXXODiff_AllPert_perAnalyte.pdf", final_plot, dpi=300, path='OUTPUT_PAPER', useDingbats=FALSE, width = (2.3*nCols_plots)+0.5, height = (2.8*nRows_plots)+3, units = "cm" )
print("Saved Fig3D in OUTPUT_PAPER")
############## Plotting Fig3B and C: Highest residual per analyte for initial model of XX and XO #########
### Fetching Mismatch Data(Quick)
Mismatch_DATA <- read.csv("./OUTPUT/Mismatch_DATA.csv")
Mismatch_DATA <- Mismatch_DATA %>%
select(-X)
colnames(Mismatch_DATA) <- gsub("Gsk3_p", "pGsk3", colnames(Mismatch_DATA) )
colnames(Mismatch_DATA) <- gsub("Mek_p", "pMek", colnames(Mismatch_DATA) )
colnames(Mismatch_DATA) <- gsub("mTor_p", "pmTor", colnames(Mismatch_DATA) )
colnames(Mismatch_DATA) <- gsub("Akt_p", "pAkt", colnames(Mismatch_DATA) )
colnames(Mismatch_DATA) <- gsub("Erk_p", "pErk", colnames(Mismatch_DATA) )
colnames(Mismatch_DATA) <- gsub("Stat3_p", "pStat3", colnames(Mismatch_DATA) )
colnames(Mismatch_DATA) <- gsub("Smad2_p", "pSmad2", colnames(Mismatch_DATA) )
### Subsetting the initial and completed models of the 2 cell lines
Init_XX_Accuracy_MM <- Mismatch_DATA %>%
filter(x_status == "XX" & Category == "Sim_Init")
Init_XO_Accuracy_MM <- Mismatch_DATA %>%
filter(x_status == "XO" & Category == "Sim_Init")
Final_XX_Accuracy_MM <- Mismatch_DATA %>%
filter(x_status == "XX" & Category == "Sim_Final")
Final_XO_Accuracy_MM <- Mismatch_DATA %>%
filter(x_status == "XO" & Category == "Sim_Final")
############### Plotting Fig3B ######
Init_XX_Accuracy_MM_AllPert <- Init_XX_Accuracy_MM
Init_XX_Accuracy_MM_long <- Init_XX_Accuracy_MM_AllPert %>%
tidyr::pivot_longer(
cols = starts_with("p",ignore.case = FALSE),
names_to = "Analyte",
values_to = "mismatch_value")
Init_XX_Accuracy_MM_long <- Init_XX_Accuracy_MM_long %>%
arrange(desc(abs(mismatch_value)))
Highest_mismatch_AllPert_perAnalayte <- Init_XX_Accuracy_MM_long %>%
group_by(Analyte) %>%
slice(which.max(abs(mismatch_value))) ## Best way to get the rows corresponding to the max values !!
Analyte_seq <- c("pAkt","pGsk3","pmTor","pMek","pErk","pStat3","pSmad2")
Highest_mismatch_AllPert_perAnalayte$Analyte <- factor(Highest_mismatch_AllPert_perAnalayte$Analyte, levels = Analyte_seq)
Highest_mismatch_AllPert_perAnalayte <- Highest_mismatch_AllPert_perAnalayte %>%
arrange(factor(Analyte, levels = Analyte_seq))
Init_XX_Selected_Pert <- as.character(Highest_mismatch_AllPert_perAnalayte$Treatment_id)
Init_XX_Selected_Analyte <- as.character(Highest_mismatch_AllPert_perAnalayte$Analyte)
Mismatch_AllPert_perAnalayte_Legend <- Loop_MaxDiff(ALL_DATA,c("XX"),Init_XX_Selected_Pert, Init_XX_Selected_Analyte)
df_leg <- get_legend(Mismatch_AllPert_perAnalayte_Legend[[2]])
nRows_plots = 1
nCols_plots = 7
Mismatch_AllPert_perAnalayte <- RemoveLegend_func(Mismatch_AllPert_perAnalayte_Legend)
Mismatch_AllPert_perAnalayte <- lapply(
Mismatch_AllPert_perAnalayte ,
set_panel_size,
width = unit(1.3, "cm"),
height = unit(1.8, "cm"))
final_plot <- grid.arrange(arrangeGrob(grobs=Mismatch_AllPert_perAnalayte, nrow = nRows_plots),
arrangeGrob(nullGrob(),df_leg,nullGrob(), nrow = 1),
#top = textGrob("Title Text Holder Here", gp = gpar(fontsize = 12, font = 2)),
nrow = 2,
heights = c(nRows_plots,0.5))
ggsave(file="Fig3B_Mismatch_AllPert_perAnalayte_XX.pdf", final_plot, dpi=300, path='OUTPUT_PAPER', useDingbats=FALSE, width = (2.3*nCols_plots)+0.5, height = (2.8*nRows_plots)+3, units = "cm" )
print("Fig3B saved in OUTPUT_PAPER")
############### Plotting Fig3C ######
Init_XO_Accuracy_MM_AllPert <- Init_XO_Accuracy_MM
Init_XO_Accuracy_MM_long <- Init_XO_Accuracy_MM_AllPert %>%
tidyr::pivot_longer(
cols = starts_with("p",ignore.case = FALSE),
names_to = "Analyte",
values_to = "mismatch_value")
Init_XO_Accuracy_MM_long <- Init_XO_Accuracy_MM_long %>%
arrange(desc(abs(mismatch_value)))
#arrange(desc(abs(phospho_value_Diff)))
Highest_mismatch_AllPert_perAnalayte <- Init_XO_Accuracy_MM_long %>%
group_by(Analyte) %>%
slice(which.max(abs(mismatch_value))) ## Best way to get the rows corresponding to the max values !!
Analyte_seq <- c("pAkt","pGsk3","pmTor","pMek","pErk","pStat3","pSmad2")
Highest_mismatch_AllPert_perAnalayte$Analyte <- factor(Highest_mismatch_AllPert_perAnalayte$Analyte, levels = Analyte_seq)
Highest_mismatch_AllPert_perAnalayte <- Highest_mismatch_AllPert_perAnalayte %>%
arrange(factor(Analyte, levels = Analyte_seq))
Init_XO_Selected_Pert <- as.character(Highest_mismatch_AllPert_perAnalayte$Treatment_id)
Init_XO_Selected_Analyte <- as.character(Highest_mismatch_AllPert_perAnalayte$Analyte)
Mismatch_AllPert_perAnalayte_Legend <- Loop_MaxDiff(ALL_DATA,c("XO"),Init_XO_Selected_Pert, Init_XO_Selected_Analyte)
df_leg <- get_legend(Mismatch_AllPert_perAnalayte_Legend[[2]])
nRows_plots = 1
nCols_plots = 7
Mismatch_AllPert_perAnalayte <- RemoveLegend_func(Mismatch_AllPert_perAnalayte_Legend)
Mismatch_AllPert_perAnalayte <- lapply(
Mismatch_AllPert_perAnalayte ,
set_panel_size,
width = unit(1.3, "cm"),
height = unit(1.8, "cm"))
final_plot <- grid.arrange(arrangeGrob(grobs=Mismatch_AllPert_perAnalayte, nrow = nRows_plots),
arrangeGrob(nullGrob(),df_leg,nullGrob(), nrow = 1),
#top = textGrob("Title Text Holder Here", gp = gpar(fontsize = 12, font = 2)),
nrow = 2,
heights = c(nRows_plots,0.5))
ggsave(file="Fig3C_Mismatch_AllPert_perAnalayte_XO.pdf", final_plot, dpi=300, path='OUTPUT_PAPER', useDingbats=FALSE, width = (2.3*nCols_plots)+0.5, height = (2.8*nRows_plots)+3, units = "cm" )
print("Fig3C saved in OUTPUT_PAPER")
